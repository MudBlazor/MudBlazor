// NOTE: this file is autogenerated. Any changes will be overwritten!
namespace MudBlazor.Docs.Models
{
    public static partial class Snippets
    {

public const string AppBarElevationExample = @"```html
<MudAppBar Position=""Position.Static"" Elevation=""0"">
    <MudIconButton Icon=""@Icons.Material.Menu"" Color=""Color.Inherit"" Edge=""Edge.Start"" />
    <MudAppBarSpacer />
    <MudButton Variant=""Variant.Text"" Color=""Color.Inherit"">Login</MudButton>
</MudAppBar>
```";
public const string AppBarSimpleExample = @"```html
<MudAppBar Position=""Position.Static"">
    <MudIconButton Icon=""@Icons.Material.Menu"" Color=""Color.Inherit"" Edge=""Edge.Start"" />
    <MudAppBarSpacer />
    <MudButton Variant=""Variant.Text"" Color=""Color.Inherit"">Login</MudButton>
</MudAppBar>
```";
public const string ButtonCustomizedExample = @"```html
<MudButton Variant=""Variant.Filled"" EndIcon=""@Icons.Material.ArrowDownward"" Style=""background-color: yellowgreen; color: white; width: 200px; height: 60px;"">
    Download Now
</MudButton>
```";
public const string ButtonElevationExample = @"```html
<MudButton Variant=""Variant.Filled"" DisableElevation=""true"" Color=""Color.Primary"">Disable elevation</MudButton>
```";
public const string ButtonFilledExample = @"```html
<MudButton Variant=""Variant.Filled"">Default</MudButton>
<MudButton Variant=""Variant.Filled"" Color=""Color.Primary"">Primary</MudButton>
<MudButton Variant=""Variant.Filled"" Color=""Color.Secondary"">Secondary</MudButton>
<MudButton Variant=""Variant.Filled"" Disabled=""true"">Disabled</MudButton>
```";
public const string ButtonIconLabelExample = @"```html
<MudButton Variant=""Variant.Filled"" StartIcon=""@Icons.Material.Delete"" Color=""Color.Secondary"">Delete</MudButton>
<MudButton Variant=""Variant.Filled"" EndIcon=""@Icons.Material.Send"" Color=""Color.Primary"">Send</MudButton>
<MudButton Variant=""Variant.Filled"" StartIcon=""@Icons.Material.CloudUpload"">Upload</MudButton>
<MudButton Variant=""Variant.Filled"" StartIcon=""@Icons.Material.Mic"" Disabled=""true"">Talk</MudButton>
<MudButton Variant=""Variant.Filled"" StartIcon=""@Icons.Material.Save"" Color=""Color.Primary"" Size=""Size.Small"">Save</MudButton>
<MudButton Variant=""Variant.Filled"" StartIcon=""@Icons.Material.Save"" Color=""Color.Primary"" Size=""Size.Large"">Save</MudButton>
```";
public const string ButtonOutlinedExample = @"```html
<MudButton Variant=""Variant.Outlined"">Default</MudButton>
<MudButton Variant=""Variant.Outlined"" Color=""Color.Primary"">Primary</MudButton>
<MudButton Variant=""Variant.Outlined"" Color=""Color.Secondary"">Secondary</MudButton>
<MudButton Variant=""Variant.Outlined"" Disabled=""true"">Disabled</MudButton>
```";
public const string ButtonSizeExample = @"```html
<SectionContentRow>
    <MudButton Variant=""Variant.Text"" Size=""Size.Small"">Small</MudButton>
    <MudButton Variant=""Variant.Text"" Size=""Size.Medium"">Medium</MudButton>
    <MudButton Variant=""Variant.Text"" Size=""Size.Large"">Large</MudButton>
</SectionContentRow>
<SectionContentRow>
    <MudButton Variant=""Variant.Outlined"" Size=""Size.Small"" Color=""Color.Secondary"">Small</MudButton>
    <MudButton Variant=""Variant.Outlined"" Size=""Size.Medium"" Color=""Color.Secondary"">Medium</MudButton>
    <MudButton Variant=""Variant.Outlined"" Size=""Size.Large"" Color=""Color.Secondary"">Large</MudButton>
</SectionContentRow>
<SectionContentRow>
    <MudButton Variant=""Variant.Filled"" Size=""Size.Small"" Color=""Color.Primary"">Small</MudButton>
    <MudButton Variant=""Variant.Filled"" Size=""Size.Medium"" Color=""Color.Primary"">Medium</MudButton>
    <MudButton Variant=""Variant.Filled"" Size=""Size.Large"" Color=""Color.Primary"">Large</MudButton>
</SectionContentRow>
<SectionContentRow>
    <MudIconButton Icon=""@Icons.Material.Delete"" Size=""Size.Small""></MudIconButton>
    <MudIconButton Icon=""@Icons.Material.Delete"" Size=""Size.Medium""></MudIconButton>
    <MudIconButton Icon=""@Icons.Material.Delete"" Size=""Size.Large""></MudIconButton>
</SectionContentRow>
```";
public const string ButtonTextExample = @"```html
<MudButton Variant=""Variant.Text"">Default</MudButton>
<MudButton Variant=""Variant.Text"" Color=""Color.Primary"">Primary</MudButton>
<MudButton Variant=""Variant.Text"" Color=""Color.Secondary"">Secondary</MudButton>
<MudButton Variant=""Variant.Text"" Disabled=""true"">Disabled</MudButton>
```";
public const string CardCombinedExample = @"```html
<MudCard>
    <MudCardHeader>
        <CardHeaderAvatar>
            <MudAvatar>I</MudAvatar>
        </CardHeaderAvatar>
        <CardHeaderContent>
            <MudText Typo=""Typo.body1"">Istra Croatia</MudText>
            <MudText Typo=""Typo.body2"">Peninsula in Europe</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudIconButton Icon=""@Icons.Material.Settings"" Color=""Color.Default"" />
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardMedia Image=""_content/MudBlazor.Docs/images/content-template-pilars.png"" Height=""250"" />
    <MudCardContent>
        <MudText Typo=""Typo.body2"">This photo was taken in a small village in Istra Croatia.</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudIconButton Icon=""@Icons.Material.Favorite"" Color=""Color.Default"" />
        <MudIconButton Icon=""@Icons.Material.Share"" Color=""Color.Default"" />
    </MudCardActions>
</MudCard>
```";
public const string CardHeaderExample = @"```html
<MudCard>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo=""Typo.h6"">The Story Book</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudIconButton Icon=""@Icons.Material.Settings"" Color=""Color.Inherit"" />
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardContent>
        <MudText>This day everything happend.</MudText>
        <MudText Typo=""Typo.body2"">The quick, brown fox jumps over a lazy dog.</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant=""Variant.Text"">Read More</MudButton>
    </MudCardActions>
</MudCard>
```";
public const string CardMediaExample = @"```html
<MudCard>
    <MudCardMedia Image=""_content/MudBlazor.Docs/images/content-template-door.png"" Height=""200"" />
    <MudCardContent>
        <MudText Typo=""Typo.h5"">Old Paint</MudText>
        <MudText Typo=""Typo.body2"">Old paint found on a stone house door.</MudText>
        <MudText Typo=""Typo.body2"">This photo was taken in a small village in Istra Croatia.</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant=""Variant.Text"" Color=""Color.Primary"">Share</MudButton>
        <MudButton Variant=""Variant.Text"" Color=""Color.Primary"">Learn More</MudButton>
    </MudCardActions>
</MudCard>
```";
public const string CardOutlinedExample = @"```html
<MudCard Outlined=""true"">
    <MudCardContent>
        <MudText>Story of the day</MudText>
        <MudText Typo=""Typo.body2"">The quick, brown fox jumps over a lazy dog.</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant=""Variant.Text"">Learn More</MudButton>
    </MudCardActions>
</MudCard>
```";
public const string CardSimpleExample = @"```html
<MudCard>
    <MudCardContent>
        <MudText>Story of the day</MudText>
        <MudText Typo=""Typo.body2"">The quick, brown fox jumps over a lazy dog.</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant=""Variant.Text"">Learn More</MudButton>
    </MudCardActions>
</MudCard>
```";
public const string CheckboxBasicExample = @"```html
<MudCheckBox @bind-Checked=""@Basic_CheckBox1""></MudCheckBox>
<MudCheckBox @bind-Checked=""@Basic_CheckBox2"" Color=""Color.Primary""></MudCheckBox>
<MudCheckBox @bind-Checked=""@Basic_CheckBox1"" Color=""Color.Secondary""></MudCheckBox>
<MudCheckBox @bind-Checked=""@Basic_CheckBox1"" Disabled=""true""></MudCheckBox>

@code {
    public bool Basic_CheckBox1 { get; set; } = true;
    public bool Basic_CheckBox2 { get; set; } = false;
    public bool Basic_CheckBox3 { get; set; } = false;
}
```";
public const string CheckboxLabelExample = @"```html
<MudCheckBox @bind-Checked=""@Label_CheckBox1"" Label=""Default""></MudCheckBox>
<MudCheckBox @bind-Checked=""@Label_CheckBox2"" Label=""Primary"" Color=""Color.Primary""></MudCheckBox>
<MudCheckBox @bind-Checked=""@Label_CheckBox3"" Label=""Secondary"" Color=""Color.Secondary""></MudCheckBox>
<MudCheckBox @bind-Checked=""@Label_CheckBox1"" Disabled=""true"" Label=""Disabled""></MudCheckBox>

@code {
    public bool Label_CheckBox1 { get; set; } = true;
    public bool Label_CheckBox2 { get; set; } = false;
    public bool Label_CheckBox3 { get; set; } = false;
}
```";
public const string ContainedFixedExample = @"```html
<MudPaper>
    <MudContainer Fixed=""true""></MudContainer>
</MudPaper>
```";
public const string ContainerFluidExample = @"```html
<MudPaper>
    <MudContainer MaxWidth=""MaxWidth.Medium""></MudContainer>
</MudPaper>
```";
public const string DialogDialogFormExample = @"```html
<MudDialog>
    <DialogContent>
        <MudTextField Label=""Database name"" FullWidth=""true""></MudTextField>
        <MudTextField Label=""Database tags"" FullWidth=""true""></MudTextField>
        <MudSelect FullWidth=""true"" Label=""Resource Group"" SelectedValue=""@OnSelectedValue"">
            <MudSelectItem Value=""Prod"">Prod</MudSelectItem>
            <MudSelectItem Value=""Test"">Test</MudSelectItem>
        </MudSelect>
        <MudFormControl FullWidth=""true"">
            <MudCheckBox Label=""Want to use SQL elastic pool?"" Color=""Color.Primary""></MudCheckBox>
        </MudFormControl>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick=""Cancel"">Cancel</MudButton>
        <MudButton Color=""Color.Primary"" OnClick=""AddDatabase"">Add Database</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    void AddDatabase() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();

    private string ResourceGroup { get; set; }

    private void OnSelectedValue(string value)
    {
        ResourceGroup = value;
    }
}
```";
public const string DialogDialogSimpleExample = @"```html
<MudDialog DisableSidePadding=""true"" ClassContent=""demo-dialog-simple"">
    <DialogContent>
        <MudList>
            <MudListItem @onclick=""@(() => SelectUser(""notsocool@gmail.com""))"">
                <MudAvatar>
                    <MudIcon Icon=""@Icons.Material.Person"" />
                </MudAvatar>
                <MudText>
                    coolusername@gmail.com
                </MudText>
            </MudListItem>
            <MudListItem @onclick=""@(() => SelectUser(""notsocool@gmail.com""))"">
                <MudAvatar>
                    <MudIcon Icon=""@Icons.Material.Person"" />
                </MudAvatar>
                <MudText>
                    notsocool@gmail.com
                </MudText>
            </MudListItem>
            <MudListItem @onclick=""@(() => SelectUser(""strelok@gmail.com""))"">
                <MudAvatar Class=""s-t-a-l-k-e-r"">
                    <MudIcon Icon=""@Icons.Custom.Radioactive"" />
                </MudAvatar>
                <MudText>
                    strelok@gmail.com
                </MudText>
            </MudListItem>
        </MudList>
    </DialogContent>
</MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    void SelectUser(string user)
    {
        MudDialog.Close(DialogResult.Ok(user));
    }
}
```";
public const string DialogFormExample = @"```html
@inject IDialogService Dialog

<MudButton Variant=""Variant.Outlined"" Color=""Color.Primary"" @onclick=""OpenFormDialog"">Open Form Dialog</MudButton>

@code {

    void OpenFormDialog()
    {
        Dialog.Show<DialogDialogFormExample>(""Create SQL Database"");
    }

}
```";
public const string DialogSimpleExample = @"```html
@inject IDialogService Dialog

<MudText Align=""Align.Center"" Typo=""Typo.subtitle1"">Selected User</MudText>
<MudText Align=""Align.Center"" Typo=""Typo.subtitle2"">@selectedUser</MudText>
<MudButton Variant=""Variant.Outlined"" Color=""Color.Primary"" @onclick=""OpenSimpleDialog"">Open Simple Dialog</MudButton>


@code {
    bool HideSourceSimpleDialog = true;

    public void ShowSimpleDialogSource()
    {
        HideSourceSimpleDialog = !HideSourceSimpleDialog;
    }


    string selectedUser = ""No user selected"";

    async Task OpenSimpleDialog()
    {
        var userSelect = Dialog.Show<DialogDialogSimpleExample>(""Choose Account"");
        var result = await userSelect.Result;

        if (!result.Cancelled)
        {
            selectedUser = result.Data.ToString() ?? string.Empty;
        }
    }
}
```";
public const string DrawerClippingExample = @"```html
<MudLayout DrawerOpen=""@DocsDrawerOpen"" DrawerClipped=""true"">
    <MudAppBar Position=""Position.Absolute"" Elevation=""0"">
        <MudIconButton Icon=""@Icons.Material.Menu"" Color=""Color.Inherit"" Edge=""Edge.Start"" OnClick=""@((e) => DocsDrawerToggle())"" />
        <MudAppBarSpacer />
        <MudButton Variant=""Variant.Text"" Color=""Color.Inherit"">Login</MudButton>
    </MudAppBar>
    <MudDrawer Anchor=""Anchor.Right"">
        <MudDrawerHeader>
            <MudText Typo=""Typo.h6"">My App</MudText>
        </MudDrawerHeader>
        <MudList>
            <MudListNavItem Href=""#"">Store</MudListNavItem>
            <MudListNavItem Href=""#"">Library</MudListNavItem>
            <MudListNavItem Href=""#"">Community</MudListNavItem>
        </MudList>
    </MudDrawer>
    <MudMainContent>
        <LoremIpsum />
    </MudMainContent>
</MudLayout>

@code{
    bool DocsDrawerOpen = true;

    void DocsDrawerToggle()
    {
        DocsDrawerOpen = !DocsDrawerOpen;
    }
}
```";
public const string DrawerPersistentExample = @"```html
<DocsFrame>
    <MudLayout DrawerOpen=""@DocsDrawerOpen"">
        <MudAppBar Position=""Position.Absolute"" Elevation=""0"">
            <MudIconButton Icon=""@Icons.Material.Menu"" Color=""Color.Inherit"" Edge=""Edge.Start"" OnClick=""@((e) => DocsDrawerToggle())"" />
            <MudAppBarSpacer />
            <MudButton Variant=""Variant.Text"" Color=""Color.Inherit"">Login</MudButton>
        </MudAppBar>
        <MudDrawer>
            <MudDrawerHeader>
                <MudText Typo=""Typo.h6"">My App</MudText>
            </MudDrawerHeader>
            <MudList>
                <MudListNavItem Href=""#"">Store</MudListNavItem>
                <MudListNavItem Href=""#"">Library</MudListNavItem>
                <MudListNavItem Href=""#"">Community</MudListNavItem>
            </MudList>
        </MudDrawer>
        <MudMainContent>
            <LoremIpsum />
        </MudMainContent>
    </MudLayout>
</DocsFrame>

@code{
    bool DocsDrawerOpen = true;

    void DocsDrawerToggle()
    {
        DocsDrawerOpen = !DocsDrawerOpen;
    }
}
```";
public const string FabSimpleExample = @"```html
<MudFab Color=""Color.Primary"" Icon=""@Icons.Material.Add"" />
<MudFab Color=""Color.Secondary"" Icon=""@Icons.Material.Edit"" />
<MudFab Icon=""@Icons.Material.Navigation"" Label=""Navigation"" />
<MudFab Icon=""@Icons.Material.Save"" Disabled=""true"" />
```";
public const string FabSizeExample = @"```html
<SectionContentRow>
    <MudFab Color=""Color.Secondary"" Icon=""@Icons.Material.Add"" Size=""Size.Small"" />
    <MudFab Color=""Color.Secondary"" Icon=""@Icons.Material.Add"" Size=""Size.Medium"" />
    <MudFab Color=""Color.Secondary"" Icon=""@Icons.Material.Add"" Size=""Size.Large"" />
</SectionContentRow>
<SectionContentRow>
    <MudFab Color=""Color.Primary"" Icon=""@Icons.Material.ShoppingCart"" Size=""Size.Small"" Label=""To cart"" />
    <MudFab Color=""Color.Primary"" Icon=""@Icons.Material.ShoppingCart"" Size=""Size.Medium"" Label=""To cart"" />
    <MudFab Color=""Color.Primary"" Icon=""@Icons.Material.ShoppingCart"" Size=""Size.Large"" Label=""To cart"" />
</SectionContentRow>
```";
public const string GridBasicExample = @"```html
<MudGrid>
    <MudItem xs=""12"">
        <MudPaper>12</MudPaper>
    </MudItem>
    <MudItem xs=""6"">
        <MudPaper>6</MudPaper>
    </MudItem>
    <MudItem xs=""6"">
        <MudPaper>6</MudPaper>
    </MudItem>
    <MudItem xs=""3"">
        <MudPaper>3</MudPaper>
    </MudItem>
    <MudItem xs=""3"">
        <MudPaper>3</MudPaper>
    </MudItem>
    <MudItem xs=""3"">
        <MudPaper>3</MudPaper>
    </MudItem>
    <MudItem xs=""3"">
        <MudPaper>3</MudPaper>
    </MudItem>
</MudGrid>
```";
public const string GridSpacingExample = @"```html
<MudGrid>
    <MudItem xs=""12"">
        <MudGrid Spacing=""@spacing"" Justify=""Justify.Center"">
            <MudItem>
                <MudPaper />
            </MudItem>
            <MudItem>
                <MudPaper />
            </MudItem>
            <MudItem>
                <MudPaper />
            </MudItem>
        </MudGrid>
    </MudItem>
</MudGrid>
<MudPaper Class=""demo-grid-paper"" Elevation=""0"">
    <MudButton Color=""Color.Primary"" OnClick=""@AddSpacing"">Change Spacing</MudButton>
    <MudAppBarSpacer></MudAppBarSpacer>
    <MudText>Spacing: @spacing</MudText>
</MudPaper>

@code {
    public int spacing { get; set; } = 2;
    void AddSpacing()
    {
        if (spacing >= 10)
        {
            spacing = 0;
        }
        else
        {
            spacing += 1;
        }
        StateHasChanged();
    }
}
```";
public const string IconButtonSimpleExample = @"```html
<MudIconButton Icon=""@Icons.Material.Delete""></MudIconButton>
<MudIconButton Icon=""@Icons.Custom.GitHub"" Color=""Color.Primary""></MudIconButton>
<MudIconButton Icon=""@Icons.Material.Favorite"" Color=""Color.Secondary""></MudIconButton>
<MudIconButton Icon=""@Icons.Material.Share"" Disabled=""true""></MudIconButton>
```";
public const string IconToggleButtonExample = @"```html
<MudIconButton Icon=""@Icons.Material.Delete""></MudIconButton>
<MudIconButton Icon=""@Icons.Custom.GitHub"" Color=""Color.Primary""></MudIconButton>
<MudIconButton Icon=""@Icons.Material.Favorite"" Color=""Color.Secondary""></MudIconButton>
<MudIconButton Icon=""@Icons.Material.Share"" Disabled=""true""></MudIconButton>
```";
public const string IconsColorExample = @"```html
<MudIcon Icon=""@Icons.Custom.Radioactive"" Color=""Color.Default"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" Color=""Color.Primary"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" Color=""Color.Secondary"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" Color=""Color.Success"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" Color=""Color.Info"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" Color=""Color.Warning"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" Color=""Color.Danger"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" Color=""Color.Dark"" />
```";
public const string IconsFontAwesomeExample = @"```html
<link href=""https://use.fontawesome.com/releases/v5.14.0/css/all.css"" rel=""stylesheet"">
<MudIcon FontClass=""fab fa-internet-explorer"" Color=""Color.Primary"" />
<MudIcon FontClass=""fab fa-angellist"" Color=""Color.Secondary"" />
<MudIcon FontClass=""fas fa-dragon"" Color=""Color.Success"" />
<MudIcon FontClass=""fas fa-toilet-paper-slash"" />
<MudIcon FontClass=""fas fa-toilet-paper-slash"" Size=""Size.Small"" />
<MudIcon FontClass=""fas fa-toilet-paper-slash"" Size=""Size.Large"" />
```";
public const string IconsFontIconsExample = @"```html
<link href=""https://fonts.googleapis.com/icon?family=Material+Icons"" rel=""stylesheet"">
```";
public const string IconsFontMaterialIconsExample = @"```html
<link href=""https://fonts.googleapis.com/icon?family=Material+Icons"" rel=""stylesheet"">

<MudIcon FontIcon=""accessibility"" />
<MudIcon FontIcon=""invert_colors"" Color=""Color.Primary"" />
<MudIcon FontIcon=""android"" Color=""Color.Success"" />
<MudIcon FontIcon=""settings"" />
<MudIcon FontIcon=""settings"" Size=""Size.Small"" />
<MudIcon FontIcon=""settings"" Size=""Size.Large"" />
```";
public const string IconsSizeExample = @"```html
<MudIcon Icon=""@Icons.Custom.Radioactive"" Size=""Size.Small"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" />
<MudIcon Icon=""@Icons.Custom.Radioactive"" Size=""Size.Large"" />
```";
public const string IconsUsageExample = @"```html
<MudIcon Icon=""@Icons.Material.Favorite"" />
<MudIcon Icon=""@Icons.Material.Api"" />
<MudIcon Icon=""@Icons.Material.AddCircle"" />
<MudIcon Icon=""@Icons.Custom.GitHub"" />
<MudIcon Icon=""@Icons.Custom.Google"" />
<MudIcon Icon=""@Icons.Custom.Reddit"" />
```";
public const string LinkSimpleExample = @"```html
<MudLink Href=""#"">Default</MudLink>
<MudLink Href=""#"" Typo=""Typo.body2"">Different Typography</MudLink>
```";
public const string LinkUnderlineExample = @"```html
<MudLink Href=""#"">Default</MudLink>
<MudLink Href=""#"" Underline=""Underline.Always"">Always</MudLink>
<MudLink Href=""#"" Underline=""Underline.None"">None</MudLink>
```";
public const string ListSimpleExample = @"```html
<MudList>
    <MudListItem>Inbox</MudListItem>
    <MudListItem>Sent</MudListItem>
    <MudListItem>Drafts</MudListItem>
    <MudDivider></MudDivider>
    <MudListItem>Spam</MudListItem>
    <MudListItem>Bin</MudListItem>
</MudList>
```";
public const string PaperComponentExample = @"```html
<MudPaper Elevation=""0""></MudPaper>
<MudPaper></MudPaper>
<MudPaper Elevation=""3""></MudPaper>
```";
public const string PaperVariantsExample = @"```html
<MudPaper Outlined=""true""></MudPaper>
<MudPaper Outlined=""true"" Square=""true""></MudPaper>
<MudPaper Square=""true""></MudPaper>
```";
public const string RadioGroupExample = @"```html
<MudFormControl Label=""Colors"">
    <MudRadioGroup @bind-SelectedLabel=""@SelectedLabel"" @bind-SelectedOption=""@SelectedOption"">
        <MudRadio Color=""Color.Primary"" Option=""Radio 1"">Primary</MudRadio>
        <MudRadio Color=""Color.Secondary"" Option=""Radio 2"">Secondary</MudRadio>
        <MudRadio Option=""Radio 3"">Default</MudRadio>
        <MudRadio Disabled=""true"" Option=""Radio 4"">Disabled</MudRadio>
    </MudRadioGroup>
</MudFormControl> 

@code {
    public string SelectedLabel { get; set; } = ""Primary"";
    public string SelectedOption { get; set; }
}
```";
public const string RadioLabelPlacementExample = @"```html
<MudFormControl Label=""Placement"" Class=""demo-radio-inline"">
    <MudRadioGroup @bind-SelectedLabel=""@SelectedLabel"" @bind-SelectedOption=""@SelectedOption"">
        <MudRadio Placement=""Placement.Bottom"" Color=""Color.Primary"" Option=""Radio 1"">Bottom</MudRadio>
        <MudRadio Placement=""Placement.Start"" Color=""Color.Primary"" Option=""Radio 2"">Start</MudRadio>
        <MudRadio Placement=""Placement.Top"" Color=""Color.Primary"" Option=""Radio 3"">Top</MudRadio>
        <MudRadio Placement=""Placement.End"" Color=""Color.Primary"" Option=""Radio 4"">End</MudRadio>
    </MudRadioGroup>
</MudFormControl>

@code {
    public string SelectedLabel { get; set; } = ""Primary"";
    public string SelectedOption { get; set; }
}
```";
public const string SelectBasicExample = @"```html
<MudSelect Label=""Food"" SelectedValue=""OnSelectedValue"">
    <MudSelectItem Value=""pizza"">Pizza</MudSelectItem>
    <MudSelectItem Value=""burgers"">Burgers</MudSelectItem>
    <MudSelectItem Value=""hotdog"">Hot Dogs</MudSelectItem>
</MudSelect>
<MudSelect Label=""Food"" SelectedValue=""OnSelectedValue"" HelperText=""With helper text"">
    <MudSelectItem Value=""pizza"">Pizza</MudSelectItem>
    <MudSelectItem Value=""burgers"">Burgers</MudSelectItem>
    <MudSelectItem Value=""hotdog"">Hot Dogs</MudSelectItem>
</MudSelect>

<MudSelect SelectedValue=""OnSelectedValue"" HelperText=""With no label"">
    <MudSelectItem Value=""pizza"">Pizza</MudSelectItem>
    <MudSelectItem Value=""burgers"">Burgers</MudSelectItem>
    <MudSelectItem Value=""hotdog"">Hot Dogs</MudSelectItem>
</MudSelect>

<MudSelect Placeholder=""Brands"" SelectedValue=""OnSelectedValue"" HelperText=""Disabled"" Disabled=""true"">
    <MudSelectItem Value=""volvo"">Volvo</MudSelectItem>
    <MudSelectItem Value=""saab"">Saab</MudSelectItem>
    <MudSelectItem Value=""scania"">Scania</MudSelectItem>
</MudSelect>

@code {

    private string Item { get; set; } = ""Nothing selected"";

    private void OnSelectedValue(string value)
    {
        Item = value;
    }

}
```";
public const string SimpleTableExample = @"```html
<MudSimpleTable>
    <thead>
        <tr>
            @foreach (var h in headings)
            {
                <th>@h</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var row in rows)
        {
            <tr>
                @foreach (var x in row.Split())
                {
                    <td>@x</td>
                }
            </tr>
        }
    </tbody>
</MudSimpleTable>

@code {
    string[] headings = { ""ID"", ""Name"", ""Email"", ""Gender"", ""IP Address"" };
    string[] rows = {
        @""1 Krishna kpartner0@usatoday.com Male 28.25.250.202"",
        @""2 Webb wstitle1@ning.com Male 237.168.134.114"",
        @""3 Nathanil nneal2@cyberchimps.com Male 92.6.0.175"",
        @""4 Adara alockwood3@patch.com Female 182.174.217.152"",
        @""5 Cecilius cchaplin4@shinystat.com Male 195.124.144.18"",
        @""6 Cicely cemerine9@soup.io Female 138.94.191.43"",
    };
}
```";
public const string SimpleTableHoverDenseExample = @"```html
<MudSimpleTable Hover=""true"" Dense=""@dense"">
    <thead>
        <tr>
            @foreach (var h in headings)
            {
                <th>@h</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var row in rows)
        {
            <tr>
                @foreach (var x in row.Split())
                {
                    <td>@x</td>
                }
            </tr>
        }
    </tbody>
</MudSimpleTable>
<MudSwitch @bind-Checked=""@dense"">Dense</MudSwitch>

@code {
    bool dense;
    string[] headings = { ""ID"", ""Name"", ""Email"", ""Gender"", ""IP Address"" };
    string[] rows = {
        @""1 Krishna kpartner0@usatoday.com Male 28.25.250.202"",
        @""2 Webb wstitle1@ning.com Male 237.168.134.114"",
        @""3 Nathanil nneal2@cyberchimps.com Male 92.6.0.175"",
        @""4 Adara alockwood3@patch.com Female 182.174.217.152"",
        @""5 Cecilius cchaplin4@shinystat.com Male 195.124.144.18"",
        @""6 Cicely cemerine9@soup.io Female 138.94.191.43"",
    };
}
```";
public const string SliderBasicExample = @"```html
<MudGrid>
    <MudItem>
        <MudSlider Value=""50"">Volume</MudSlider>
        <MudSlider Disabled=""true"" Value=""20"">Disabled Slider</MudSlider>
    </MudItem>
    <MudItem>
        <div class=""demo-slider-filler""></div>
        <MudSlider Value=""50"" />
        <div class=""demo-slider-filler""></div>
        <MudSlider Value=""50"" Disabled=""true"" />
    </MudItem>
</MudGrid>
```";
public const string SliderStepsExample = @"```html
<MudSlider Step=""10"" Value=""70"">Temperature</MudSlider>
<MudSlider Step=""10"" Value=""50"" Disabled=""true"">Disabled</MudSlider>
```";
public const string SwitchBasicExample = @"```html
<MudSwitch @bind-Checked=""@Basic_Switch1"" />
<MudSwitch @bind-Checked=""@Basic_Switch2"" Color=""Color.Primary"" />
<MudSwitch @bind-Checked=""@Basic_Switch2"" Color=""Color.Secondary"" />
<MudSwitch Disabled=""true"" />

@code{
    public bool Basic_Switch1 { get; set; } = false;
    public bool Basic_Switch2 { get; set; } = true;
    public bool Basic_Switch3 { get; set; } = true;
}
```";
public const string SwitchWithLabelExample = @"```html
<MudSwitch @bind-Checked=""@Label_Switch1"" Label=""Default"" />
<MudSwitch @bind-Checked=""@Label_Switch2"" Label=""Primary"" Color=""Color.Primary"" />
<MudSwitch @bind-Checked=""@Label_Switch2"" Label=""Secondary"" Color=""Color.Secondary"" />
<MudSwitch Disabled=""true"" Label=""Disabled"" />

@code{
    public bool Label_Switch1 { get; set; } = false;
    public bool Label_Switch2 { get; set; } = true;
    public bool Label_Switch3 { get; set; } = true;
}
```";
public const string TableExample = @"```html
<MudTable Items=""@PeriodicTable.GetElements()"" Dense=""@dense"" Hover=""@hover"" Filter=""new Func<Element,bool>(FilterFunc)"" @bind-SelectedItem=""selected_item"">
    <ToolBarContent>
        <MudText Typo=""Typo.h6"" Class=""mud-flex-1-1-100"">Periodic Elements</MudText>
        <MudIcon Style=""margin-top: 20px; margin-right: 8px;"" Icon=""@Icons.Material.Search""></MudIcon>
        <MudTextField @bind-Value=""search_string"" Placeholder=""Search""></MudTextField>
        <MudAppBarSpacer></MudAppBarSpacer>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Nr</MudTh>
        <MudTh>Sign</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Position</MudTh>
        <MudTh>Molar mass</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.Number</MudTd>
        <MudTd>@context.Sign</MudTd>
        <MudTd>@context.Name</MudTd>
        <MudTd>@context.Position</MudTd>
        <MudTd>@context.Molar</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>
<MudSwitch @bind-Checked=""@hover"" Color=""Color.Primary"">Hover</MudSwitch>
<MudSwitch @bind-Checked=""@dense"" Color=""Color.Secondary"">Dense</MudSwitch>
<MudText Inline=""true"">Selected: @selected_item?.Name</MudText>

@code {
    bool dense = false;
    bool hover = true;
    bool fixed_header = false;
    string search_string = """";
    Element selected_item = null;
    HashSet<Element> selected_items = new HashSet<Element>();

    bool FilterFunc(Element element)
    {
        if (string.IsNullOrWhiteSpace(search_string))
            return true;
        if (element.Sign.Contains(search_string))
            return true;
        if (element.Name.Contains(search_string))
            return true;
        if ($""{element.Number} {element.Position} {element.Molar}"".Contains(search_string))
            return true;
        return false;
    }
}
```";
public const string TableFixedHeaderExample = @"```html
<MudTable Items=""@PeriodicTable.GetElements()"" FixedHeader=""true"" Height=""400px"">
    <HeaderContent>
        <MudTh>Nr</MudTh>
        <MudTh>Sign</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Position</MudTh>
        <MudTh>Molar mass</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.Number</MudTd>
        <MudTd>@context.Sign</MudTd>
        <MudTd>@context.Name</MudTd>
        <MudTd>@context.Position</MudTd>
        <MudTd>@context.Molar</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions=""new List<int>(){50, 100}"" />
    </PagerContent>
</MudTable>
<MudSwitch @bind-Checked=""@fixed_header"">Fixed Header</MudSwitch>

@code {
    bool fixed_header = true;
}
```";
public const string TableMultiSelectExample = @"```html
<MudTable Items=""@PeriodicTable.GetElements()"" MultiSelection=""true"" @bind-SelectedItems=""selected_items"" Hover=""@hover"">
    <HeaderContent>
        <MudTh>Nr</MudTh>
        <MudTh>Sign</MudTh>
        <MudTh><MudTableSortLabel>Name</MudTableSortLabel></MudTh>
        <MudTh>Position</MudTh>
        <MudTh>Molar mass</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.Number</MudTd>
        <MudTd>@context.Sign</MudTd>
        <MudTd>@context.Name</MudTd>
        <MudTd>@context.Position</MudTd>
        <MudTd>@context.Molar</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions=""new List<int>(){50, 100}"" />
    </PagerContent>
</MudTable>
<MudText Inline=""true"">Selected items: @(selected_items==null ? """" : string.Join("", "", selected_items.OrderBy(x=>x.Sign).Select(x=>x.Sign)))</MudText>

@code {
    bool hover = true;
    HashSet<Element> selected_items = new HashSet<Element>();
}
```";
public const string TabsSimpleExample = @"```html
<MudTabs>
    <MudTabPanel Text=""Item 1"">
        Item 1
    </MudTabPanel>
    <MudTabPanel Text=""Item 2"">
        Item 2
    </MudTabPanel>
    <MudTabPanel Text=""Item 3"">
        Item 3
    </MudTabPanel>
</MudTabs>
```";
public const string TemplateExample = @"```html

```";
public const string TextFieldBasicExample = @"```html
<MudTextField Label=""Standard"" Variant=""Variant.Text""></MudTextField>
<MudTextField Label=""Filled"" Variant=""Variant.Filled""></MudTextField>
<MudTextField Label=""Outlined"" Variant=""Variant.Outlined""></MudTextField>
```";
public const string TextFieldFormPropsExample = @"```html
<div>
    <MudTextField Label=""With Helper"" HelperText=""Some helping Text"" Variant=""Variant.Text""></MudTextField>
    <MudTextField Label=""Disabled"" Variant=""Variant.Text"" Disabled=""true""></MudTextField>
    <MudTextField Label=""Password"" InputType=""InputType.Password"" Variant=""Variant.Text""></MudTextField>
    <MudTextField Label=""Read Only"" Value=""Can't change me"" ReadOnly=""true"" Variant=""Variant.Text""></MudTextField>
</div>
<div>
    <MudTextField Label=""With Helper"" HelperText=""Some helping Text"" Variant=""Variant.Filled""></MudTextField>
    <MudTextField Label=""Disabled"" Variant=""Variant.Filled"" Disabled=""true""></MudTextField>
    <MudTextField Label=""Password"" InputType=""InputType.Password"" Variant=""Variant.Filled""></MudTextField>
    <MudTextField Label=""Read Only"" Value=""Can't change me"" ReadOnly=""true"" Variant=""Variant.Filled""></MudTextField>
</div>
<div>
    <MudTextField Label=""With Helper"" HelperText=""Some helping Text"" Variant=""Variant.Outlined""></MudTextField>
    <MudTextField Label=""Disabled"" Variant=""Variant.Outlined"" Disabled=""true""></MudTextField>
    <MudTextField Label=""Password"" InputType=""InputType.Password"" Variant=""Variant.Outlined""></MudTextField>
    <MudTextField Label=""Read Only"" Value=""Can't change me"" ReadOnly=""true"" Variant=""Variant.Outlined""></MudTextField>
</div>
```";
public const string TextFieldInputsExample = @"```html
<MudInput Value=""Basic Input"" />
<MudInput Placeholder=""Placeholder"" />
<MudInput Value=""Disabled"" Disabled=""true"" />
<MudInput Value=""Error"" Error=""true"" />
```";
public const string ThemesCustomExample = @"```html
<ThemeProvider Theme=""MyCoolDarkTheme"" />

@code {

    MudTheme MyCoolDarkTheme = new MudTheme()
    {
        Color_Primary = ""#304ffe"",
        Color_Secondary = ""#1de9b6"",
        Color_Surface = ""#282C34"",
        Color_Background = ""#1c2025"",
        Color_Text_Default = ""#e6e5e8""
    };
}
```";
public const string ThemesDefaultExample = @"```html
<ThemeProvider />
```";
public const string TextAlignmentExample = @"```html
<MudText Align=""Align.Left""><b>Left</b> Lorem ipsum dolor sit amet.</MudText>
<MudText Align=""Align.Right""><b>Right</b> Lorem ipsum dolor sit amet.</MudText>
<MudText Align=""Align.Center""><b>Center</b> Lorem ipsum dolor sit amet.</MudText>
<MudText Align=""Align.Justify""><b>Justify</b> Lorem ipsum dolor sit amet.</MudText>
<MudText Align=""Align.Inherit""><b>Inherit</b> Lorem ipsum dolor sit amet.</MudText>
```";
public const string TextGeneralExample = @"```html
<MudText Typo=""Typo.h1"">h1. Heading</MudText>
<MudText Typo=""Typo.h2"">h2. Heading</MudText>
<MudText Typo=""Typo.h3"">h3. Heading</MudText>
<MudText Typo=""Typo.h4"">h4. Heading</MudText>
<MudText Typo=""Typo.h5"">h5. Heading</MudText>
<MudText Typo=""Typo.h6"">h6. Heading</MudText>
<MudText Typo=""Typo.subtitle1"">subtitle1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur</MudText>
<MudText Typo=""Typo.subtitle2"">subtitle2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur</MudText>
<MudText Typo=""Typo.body1"">body1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.</MudText>
<MudText Typo=""Typo.body2"">body2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.</MudText>
<MudText Typo=""Typo.button"">BUTTON TEXT</MudText>
<MudText Typo=""Typo.caption"">caption text</MudText>
<MudText Typo=""Typo.overline"">OVERLINE TEXT</MudText>
```";
    }
}

