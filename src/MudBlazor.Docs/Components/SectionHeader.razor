@using MudBlazor.Utilities

<div @ref="@SectionReference" id="@GetSectionId()" class="@Classname">
	@if (!String.IsNullOrWhiteSpace(Title))
	{
		<MudText Typo="Typo.h5" Class="mb-5 mt-15">
			<b>@Title</b>
		</MudText>
	}
	@if (SubTitle != null)
	{
		<MudText Typo="Typo.h6">@SubTitle</MudText>
	}
	@if (Description != null)
	{
		<MudText Class="mb-5">@Description</MudText>
	}
</div>

@code {

	[CascadingParameter] private DocsPage DocsPage { get; set; }
	[CascadingParameter] private SectionSubGroups SubGroup { get; set; }
	[CascadingParameter] private DocsPageSection Section { get; set; }


	protected string Classname =>
	new CssBuilder("docs-section-header")
	.AddClass(Class)
	.Build();

	[Parameter] public string Class { get; set; }

	[Parameter] public string Title { get; set; }
	[Parameter] public RenderFragment SubTitle { get; set; }
	[Parameter] public RenderFragment Description { get; set; }

	public DocsSectionLink SectionInfo { get; set; }

	public ElementReference SectionReference;

	protected override void OnInitialized()
	{
		base.OnInitialized();

		if (DocsPage != null && !String.IsNullOrWhiteSpace(Title))
		{
			SectionInfo = new DocsSectionLink
				{
					Id = Title.Replace(" ", "-").ToLower(),
					Title = Title,
				};
		}
	}

	protected override void OnAfterRender(bool firstRender)
	{
		base.OnAfterRender(firstRender);
		if (firstRender == true && DocsPage != null && !String.IsNullOrWhiteSpace(Title))
		{
			DocsPage.AddSection(SectionInfo, Section);
		}
	}

	private string GetSectionId() => SectionInfo?.Id ?? Guid.NewGuid().ToString();
}