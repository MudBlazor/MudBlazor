<NavLink ActiveClass="d-flex" href="/">
    <MudBlazorLogo Class="docs-mudblazor-logo"/>
    <MudText Color="Color.Primary" Typo="Typo.h5" Class="docs-brand-text d-none d-md-flex">MudBlazor</MudText>
</NavLink>
<MudButton Color="Color.Inherit" Variant="Variant.Text" Class="mx-1 px-3">Docs</MudButton>
<MudButton Color="Color.Inherit" Variant="Variant.Text" Class="mx-1 px-3">Discover More</MudButton>
<MudSpacer/>
@if (DisplaySearchBar)
{
    <MudAutocomplete AutoFocus="true" @ref="_searchAutocomplete" T="ApiLinkServiceEntry" Placeholder="Search" SearchFunc="Search" Variant="Variant.Outlined" ValueChanged="OnSearchResult" Class="docs-search-bar mx-4" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search">
        <ItemTemplate Context="result">
            <MudText>@result.Title</MudText> <MudText Typo="Typo.body2">@result.SubTitle</MudText>
        </ItemTemplate>
    </MudAutocomplete>
    <MudDivider FlexItem="true" Vertical="true" DividerType="DividerType.Middle" Class="mx-4 my-4"/>
}
<MudBadge Color="Color.Secondary" Dot="true" Overlap="true">
    <MudMenu Icon="@Icons.Outlined.Notifications" Color="Color.Inherit" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopCenter">
        <MudMenuItem>No Notifications</MudMenuItem>
    </MudMenu>
</MudBadge>
<MudTooltip Duration="1000" Text="@(MainData._isDarkMode ? "Switch to Light Theme" : "Switch to Dark Theme")">
    <MudIconButton Icon="@(MainData._isDarkMode ? @Icons.Rounded.LightMode : @Icons.Material.Outlined.DarkMode)" Color="Color.Inherit" OnClick="@((e) => MainData.DarkMode())"/>
</MudTooltip>
<MudTooltip Duration="1000" Text="@(MainData._rightToLeft ? "Switch to left-to-right" : "Switch to right-to-left")">
    <MudIconButton Icon="@(MainData._rightToLeft ? @Icons.Material.Filled.FormatTextdirectionLToR : @Icons.Material.Filled.FormatTextdirectionRToL)" OnClick="@((e) => MainData.RightToLeft())" Color="Color.Inherit"/>
</MudTooltip>
<MudTooltip Duration="1000" Text="GitHub Repository">
    <MudIconButton Link="https://github.com/MudBlazor/MudBlazor/" Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit"/>
</MudTooltip>

@code {
    [CascadingParameter] private MainLayout MainData { get; set; }
    [Parameter] public bool DisplaySearchBar { get; set; }
    
    [Inject] private NavigationManager NavigationManager { get; set; }
    [Inject] private IApiLinkService ApiLinkService { get; set; }

    MudAutocomplete<ApiLinkServiceEntry> _searchAutocomplete;
    
    private Task<IEnumerable<ApiLinkServiceEntry>> Search(string text)
        {
            if (string.IsNullOrWhiteSpace(text))
            {
                // the user just clicked the autocomplete open, show the most popular pages as search result according to our analytics data
                // ordered by popularity
                return Task.FromResult<IEnumerable<ApiLinkServiceEntry>>(new[]
                {
                    new ApiLinkServiceEntry
                    {
                        Title = "Installation",
                        Link = "getting-started/installation",
                        SubTitle = "Getting started with MudBlazor fast and easy."
                    },
                    new ApiLinkServiceEntry
                    {
                        Title = "Wireframes",
                        Link = "getting-started/wireframes",
                        SubTitle =
                            "These small templates can be copied directly or just be used for inspiration."
                    },
                    new ApiLinkServiceEntry
                    {
                        Title = "Table",
                        Link = "components/table",
                        ComponentType = typeof(MudTable<T>),
                        SubTitle = "A sortable, filterable table with multiselection and pagination."
                    },
                    new ApiLinkServiceEntry
                    {
                        Title = "Grid",
                        Link = "components/grid",
                        ComponentType = typeof(MudGrid),
                        SubTitle =
                            "The grid component helps keeping layout consistent across various screen resolutions and sizes."
                    },
                    new ApiLinkServiceEntry
                    {
                        Title = "Button",
                        Link = "components/button",
                        ComponentType = typeof(MudGrid),
                        SubTitle = "A Material Design button for triggering an action or navigating to a link."
                    },
                    new ApiLinkServiceEntry
                    {
                        Title = "Card",
                        Link = "components/card",
                        ComponentType = typeof(MudCard),
                        SubTitle = "Cards can contain actions, text, or media like images or graphics."
                    },
                    new ApiLinkServiceEntry
                    {
                        Title = "Dialog",
                        Link = "components/dialog",
                        ComponentType = typeof(MudDialog),
                        SubTitle =
                            "A dialog will overlay your current app content, providing the user with either information, a choice, or other tasks."
                    },
                    new ApiLinkServiceEntry
                    {
                        Title = "App Bar",
                        Link = "components/appbar",
                        ComponentType = typeof(MudAppBar),
                        SubTitle = "App bar is used to display actions, branding, navigation and screen titles."
                    },
                    new ApiLinkServiceEntry
                    {
                        Title = "Navigation Menu",
                        Link = "components/navmenu",
                        ComponentType = typeof(MudNavMenu),
                        SubTitle = "Nav menu provides a tree-like menu linking to the content on your site."
                    },
                });
            }

            return ApiLinkService.Search(text);
        }

        private async void OnSearchResult(ApiLinkServiceEntry entry)
        {
            NavigationManager.NavigateTo(entry.Link);
            await Task.Delay(1000);
            await _searchAutocomplete.Clear();
        }
}