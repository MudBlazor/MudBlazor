@page "/playground"



@using System.Net.Http.Json
@using MudBlazor.Examples.Data.Models
@inject HttpClient httpClient

<MudTable Items="@Elements.Take(4)" 
    Hover="true" Breakpoint="Breakpoint.Sm"
     FixedHeader="true" >
    <HeaderContent>
        <MudTh>Nr</MudTh>
        <MudTh>Sign</MudTh>
        <MudTh Style="text-align:center">
            <MudTooltip>
                <ChildContent>
                    <MudIconButton Icon="@Icons.Material.Filled.Help" />
                </ChildContent>
                <TooltipContent>
                    <MudText Typo="Typo.body2">Line One</MudText>
                    <MudText Typo="Typo.body2">body2 content Line two with some long</MudText>                    
                </TooltipContent>
            </MudTooltip>
            Name
        </MudTh>
        <MudTh>Name</MudTh>        
        <MudTh>Position</MudTh>
        <MudTh>Molar mass</MudTh>       
        <MudTh>Molar mass</MudTh>       
        <MudTh>Commands</MudTh> 
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Nr">@context.Number</MudTd>
        <MudTd DataLabel="Sign">@context.Sign</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>        
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Position">@context.Position</MudTd>
        <MudTd DataLabel="Molar mass">@context.Molar</MudTd>  
        <MudTd DataLabel="Molar mass">@context.Molar</MudTd>  
        <MudTd DataLabel="">
            <MudItem>
                <MudTooltip Text="Edit Transaction Type">
                    <MudIconButton Icon="@Icons.Material.Outlined.Edit" Size="Size.Small">Edit</MudIconButton>  
                </MudTooltip>                           
                <MudTooltip Text="Delete Transaction Type">
                    <MudIconButton Icon="@Icons.Material.Outlined.Delete" Size="Size.Small">Delete</MudIconButton>  
                </MudTooltip>
            </MudItem>
        </MudTd>      
    </RowTemplate>
</MudTable> 
<MudDivider/>
<MudTabs Elevation="1" Rounded="true">
    <MudTabPanel Text="Item One" ToolTip="ToolTip One">
        <MudText>Item One</MudText>
    </MudTabPanel>
    <MudTabPanel Text="Item Two" ToolTip="ToolTip Two">
        <MudText>Item Two</MudText>
    </MudTabPanel>
    <MudTabPanel Text="Item Three" ToolTip="ToolTip Three">
        <MudText>Item Three</MudText>
    </MudTabPanel>
</MudTabs>
<MudDivider/>



<MudPaper Width="500px">
    <MudList Clickable="true">
        <MudListItem>
            <div class="d-flex flex-row py-1">
                <div class="d-flex flex-column">
                    <MudAvatar Image="https://via.placeholder.com/70" Style="width:70px;height:70px;" Square="true" />
                </div>
                <div class="d-flex flex-column flex-grow-1 px-4">
                    <MudText>Some text</MudText>
                </div>
                <div class="d-flex flex-column">
                    <MudMenu Icon="@Icons.Material.Outlined.MoreVert" OffsetX="true" Direction="Direction.Left">
                        <MudMenuItem>Enlist</MudMenuItem>
                        <MudMenuItem>Barracks</MudMenuItem>
                        <MudMenuItem>Armory</MudMenuItem>
                    </MudMenu>            
                </div>
            </div>
        </MudListItem>
    </MudList>
    <MudText Typo="Typo.caption">Popover displays but clipped</MudText>
</MudPaper>

 <MudDrawer @bind-Open="@open" Anchor="@anchor" Elevation="1" Variant="@DrawerVariant.Temporary" Color="Color.Primary" DisableOverlay="true">
      <MudItem Class="d-flex justify-center align-center pa-4 ma-2">
                    <MudMenu OffsetY="true" FullWidth="true" Style="z-index:1500 !important" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Filled.Flight" EndIcon="@Icons.Filled.KeyboardArrowDown" Label="Menu" Class="rounded-lg">
                        <MudMenuItem>Item 1</MudMenuItem>
                        <MudMenuItem>Item 2</MudMenuItem>
                        <MudMenuItem>Item 3</MudMenuItem>
                    </MudMenu>

                    <MudMenu OffsetY="true" FullWidth="true" Style="z-index:1500 !important" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Filled.Flight" EndIcon="@Icons.Filled.KeyboardArrowUp" Label="Menu" Class="rounded-lg" Direction="Direction.Top">
                        <MudMenuItem>Item 1</MudMenuItem>
                        <MudMenuItem>Item 2</MudMenuItem>
                        <MudMenuItem>Item 3</MudMenuItem>
                    </MudMenu>
</MudItem>
    </MudDrawer>

<MudDrawer @bind-Open="@open" Anchor="@anchor" Elevation="1" Variant="@DrawerVariant.Temporary" Color="Color.Primary" DisableOverlay="true">
      <MudItem Class="d-flex justify-center align-center pa-4 ma-2">
                    <MudMenu OffsetY="true" FullWidth="true" Style="z-index:1500 !important" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Filled.Flight" EndIcon="@Icons.Filled.KeyboardArrowDown" Label="Menu" Class="rounded-lg">
                        <MudMenuItem>Item 1</MudMenuItem>
                        <MudMenuItem>Item 2</MudMenuItem>
                        <MudMenuItem>Item 3</MudMenuItem>
                    </MudMenu>

                    <MudMenu OffsetY="true" FullWidth="true" Style="z-index:1500 !important" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Filled.Flight" EndIcon="@Icons.Filled.KeyboardArrowUp" Label="Menu" Class="rounded-lg" Direction="Direction.Top">
                        <MudMenuItem>Item 1</MudMenuItem>
                        <MudMenuItem>Item 2</MudMenuItem>
                        <MudMenuItem>Item 3</MudMenuItem>
                    </MudMenu>
</MudItem>
    </MudDrawer>
    <MudItem class="d-flex align-center justify-center" style="margin-top:20%">
<MudButton OnClick="@(() => OpenDrawer(MudBlazor.Anchor.Bottom))">Drawer Bottom</MudButton>
  <MudButton OnClick="@(() => OpenDrawer(MudBlazor.Anchor.Top))">Drawer Top</MudButton>
  </MudItem>
@code
{
    bool open;
    MudBlazor.Anchor anchor;

    void OpenDrawer(MudBlazor.Anchor anchor)
    {
        open = true;
        this.anchor = anchor;
    }
}


@code {
    private IEnumerable<Element> Elements = new List<Element>();

    protected override async Task OnInitializedAsync()
    {
        Elements = await httpClient.GetFromJsonAsync<List<Element>>("webapi/periodictable");
    }    
}