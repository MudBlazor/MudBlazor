@page "/mud/project/releases"
@using System.Text.RegularExpressions

@inject GitHubApiClient _gitHubApiClient;

<DocsPage DisplayFooter="true">
    <DocsPageHeader Title="Releases" />
    <DocsPageContent>
        @if (_githubReleases == null)
        {
            <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
        }
        else
        {
            <MudGrid Class="docs-github-releases">
                @foreach (var release in _githubReleases)
                {
                    <MudItem xs="12" md="4">
                        <div class="docs-sticky-info">
                            <MudText Typo="Typo.h5" Inline="true">Version </MudText>
                            <MudText Typo="Typo.h5" Inline="true" Color="Color.Primary"><b>@release.tag_name</b></MudText>
                            <MudText Typo="Typo.subtitle1">Released on @release.published_at.ToString("MMMM MM, yyyy")</MudText>
                        </div>
                    </MudItem>
                    <MudItem xs="12" md="8">
                        <div class="docs-github-release-body">
                            @((MarkupString)GetBody(release.body))
                        </div>
                    </MudItem>
                }
        </MudGrid>
        }
    </DocsPageContent>
</DocsPage>

@code {

    private GitHubReleases[] _githubReleases;

    protected override async Task OnInitializedAsync()
    {
        _githubReleases = await _gitHubApiClient.GetReleasesAsync();
        StateHasChanged();
    }

    private string GetBody(string value)
    {
        string output = value;
        output = Regex.Replace(output, @"((#{3}\s)(?<subtitle>.+))", "<h3>${subtitle}</h3>");
        output = Regex.Replace(output, @"((#{2}\s)(?<title>.+))", "<h2>${title}</h2>");
        output = Regex.Replace(output, @"(([*] )(?<row>.+))", "<div><b class=\"mx-3\">•</b>${row}</div>");
        output = Regex.Replace(output, @"(@)(\S+)", "<a target=\"_blank\" href=\"https://github.com/$2\" class=\"github-user\">@$2</a>");
        output = Regex.Replace(output, @"https://github.com/MudBlazor/MudBlazor/pull/([0-9]{4})", "<a target=\"_blank\" href=\"$0\">#$1</a>");
        output = Regex.Replace(output, @"([*][*]Full Changelog[*][*]: )(https://github.com/MudBlazor/MudBlazor/compare/)(.+)", "Full Changelog: <a target=\"_blank\" href=\"$2$3\" class=\"docs-code docs-code-primary\">$3</a>");
        return output;
    }

}