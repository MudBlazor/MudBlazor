@* Auto-generated markup. Any changes will be overwritten *@
@namespace MudBlazor.Docs.Examples.Markup
<div class="mud-codeblock">
<div class="html"><pre>
<span class="atSign">&#64;</span>using BlazorInputFile

&lt;label style=&quot;padding: 8px 16px;
        box-shadow: 0 2px 7px rgba(89, 74, 226, 0.83);
        display: inline-flex;
        width: 150px;
        justify-content: space-around;
        border-radius: 2em;
        color: white;
        cursor: pointer;
        align-items:center;
        background-color: var(--mud-palette-primary);&quot;         
       for=&quot;fileInput2&quot;&gt;
    Upload <span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudIcon</span> <span class="htmlAttributeName">Icon</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue"><span class="atSign">&#64;</span>Filled.CloudUpload</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">/&gt;</span>
<span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">label</span><span class="htmlTagDelimiter">&gt;</span>

<span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">InputFile</span> <span class="htmlAttributeName">id</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue">fileInput2</span><span class="quot">&quot;</span> <span class="htmlAttributeName">OnChange</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue">UploadFiles</span><span class="quot">&quot;</span> <span class="htmlAttributeName">hidden</span> <span class="htmlAttributeName">multiple</span> <span class="htmlTagDelimiter">/&gt;</span>

<span class="atSign">&#64;</span>if (files != null)
{
    <span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudList</span><span class="htmlTagDelimiter">&gt;</span>
        <span class="atSign">&#64;</span>foreach (var file in files)
        {
            <span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudListItem</span> <span class="htmlAttributeName">Icon</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue"><span class="atSign">&#64;</span>Filled.AttachFile</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">&gt;</span>
                <span class="atSign">&#64;</span>file.Name <span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">code</span><span class="htmlTagDelimiter">&gt;</span><span class="atSign">&#64;</span>file.Size bytes<span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">code</span><span class="htmlTagDelimiter">&gt;</span>
            <span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">MudListItem</span><span class="htmlTagDelimiter">&gt;</span>
        }
    <span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">MudList</span><span class="htmlTagDelimiter">&gt;</span>
}
</pre></div>
<div class="csharp"><pre>
<span class="atSign">&#64;</span>code{

    IEnumerable&lt;IFileListEntry&gt; files;
    <span class="keyword">private</span> <span class="keyword">void</span> UploadFiles(IFileListEntry[] entries)
    {
        files = entries;
        <span class="comment">//TODO upload the files to the server</span>
    }

}
</pre></div>
</div>
