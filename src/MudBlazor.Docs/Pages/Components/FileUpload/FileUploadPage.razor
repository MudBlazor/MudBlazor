@page "/components/fileupload"
@page "/components/fileuploader"
<DocsPage>
    <DocsPageHeader Title="File Upload">
        <Description>

            <MudText Typo="@Typo.body1" Class="mt-4">
                To create a file upload button, two elements are needed: a <CodeInline>label</CodeInline> or <CodeInline>button</CodeInline> and an <CodeInline>input</CodeInline>.
            </MudText>
            <br />
            <MudText Typo="@Typo.body1">
                When we set the <CodeInline>for</CodeInline> attribute to the same value as the <CodeInline>id</CodeInline> of the input, we enable the input to be triggered by clicking on the label or button. We then hide the input.
            </MudText>
            <br />

            <MudText Typo="@Typo.body1">
                After uploading the files, you will receive an <CodeInline>IReadOnlyList&#60IBrowserFile&#62</CodeInline> or <CodeInline>IBrowserFile</CodeInline> and you will need to manually handle the upload in <CodeInline>HandleFilesChanged</CodeInline>.
                Instead of using <CodeInline>multiple</CodeInline> to allow multiple files, you set T to <CodeInline>IReadOnlyList&#60IBrowserFile&#62</CodeInline>. Using <CodeInline>IBrowserFile</CodeInline> restricts the component to a single file.
            </MudText>
            <br />
            <br />
        </Description>
    </DocsPageHeader>
    <DocsPageContent>

        <DocsPageSection>
            <SectionHeader Title="Use any type of MudButton">
                <Description>
                    Use a <CodeInline>MudButton</CodeInline>, a <CodeInline>MudIconButton</CodeInline> or a <CodeInline>MudFab</CodeInline> with the HtmlTag property set to "label" within the <CodeInline>ButtonTemplate</CodeInline> render fragment.
                    Be sure to set the button's ID using the <CodeInline>&#64;context</CodeInline> parameter. <br />
                    A <CodeInline>MudFileUpload</CodeInline> can be <CodeInline>Disabled</CodeInline> and it will Disable its child button automatically.
                </Description>
            </SectionHeader> 
            <SectionContent DarkenBackground="true" ShowCode="false" Code="FileUploadButtonExample">
                <FileUploadButtonExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Multiple and Accept">
                <Description>
                    Allow multiple files with <CodeInline>T="IReadOnlyList&#60IBrowserFile&#62"</CodeInline> or limit the valid file types with <CodeInline>Accept</CodeInline>.
                    To upload more than 10 files, you must specify a <CodeInline>MaximumFileCount</CodeInline>.
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" ShowCode="false" Code="FileUploadMultipleAcceptExample">
                <FileUploadMultipleAcceptExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Form Validation">
                <Description>
                    Use the <CodeInline>For</CodeInline> property to validate your files within a form, and bind your files to your model class using <CodeInline>&#64;bind-Files</CodeInline>.
                    You can then handle the file upload logic within your <CodeInline>MudForm</CodeInline> submit method.
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" ShowCode="false" Code="FileUploadValidationExample">
                <FileUploadValidationExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Event Options">
                <Description>
                    You can use either <CodeInline>Files</CodeInline> and <CodeInline>FilesChanged</CodeInline> or the <CodeInline>OnFilesChanged</CodeInline> callback.
                    The former is better when used within a <CodeInline>MudForm</CodeInline>, and the latter is better for custom scenarios.
                    When using <CodeInline>OnFilesChanged</CodeInline>, it will fire regardless of validation by default, but can be configured to only fire when valid using <CodeInline>SuppressOnChangeWhenInvalid</CodeInline>.
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" ShowCode="false" Code="FileUploadEventOptionsExample">
                <FileUploadEventOptionsExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="SelectedTemplate">
                <Description>
                    You can use the <CodeInline>SelectedTemplate</CodeInline> RenderFragment to display the current files.
                    Its <CodeInline>&#64;context</CodeInline> parameter matches <CodeInline>T</CodeInline>.
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" ShowCode="false" Code="FileUploadSelectedTemplateExample">
                <FileUploadSelectedTemplateExample />
            </SectionContent>
        </DocsPageSection>
        
        <DocsPageSection>
            <SectionHeader Title="Append Multiple Files">
                <Description>
                    With <CodeInline>AppendMultipleFiles</CodeInline> set to true, when additional files are selected they will be appended to the existing list.
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" ShowCode="false" Code="FileUploadAppendMultipleExample">
                <FileUploadAppendMultipleExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Drag and Drop Example">
                <Description>Using the example below, you can compose a drag-and-drop uploader.</Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" ShowCode="false" Code="FileUploadDragAndDropExample">
                <FileUploadDragAndDropExample />
            </SectionContent>
        </DocsPageSection>

    </DocsPageContent>
</DocsPage>
