@page "/components/fileupload"
@page "/components/fileuploader"
<DocsPage>
    <DocsPageHeader Title="File Upload">
        <Description>

            <MudText Typo="@Typo.body1" Class="mt-4">
                To create a file upload button, two elements are needed: a <CodeInline>label</CodeInline> or <CodeInline>button</CodeInline> and an <CodeInline>input</CodeInline>.
            </MudText>
            <br />
            <MudText Typo="@Typo.body1">
                When we set the <CodeInline>for</CodeInline> attribute to the same value as the <CodeInline>id</CodeInline> of the input, we enable the input to be triggered by clicking on the label or button. We then hide the input.
            </MudText>
            <br />

            <MudText Typo="@Typo.body1">
                After uploading the files, you will receive a <CodeInline>IList&#60lIBrowserFile&#62</CodeInline> or <CodeInline>IBrowserFile</CodeInline> and you will need to manually handle the upload in <CodeInline>HandleFilesChanged</CodeInline>.
            </MudText>
            <br />
            <br />
        </Description>
    </DocsPageHeader>
    <DocsPageContent>

        <DocsPageSection>
            <SectionHeader Title="Use any type of MudButton">
                <Description>
                    Use a <CodeInline>MudButton</CodeInline>, a <CodeInline>MudIconButton</CodeInline> or a <CodeInline>MudFab</CodeInline> with the HtmlTag property set to "label" within the <CodeInline>ButtonTemplate</CodeInline> render fragment.
                    Be sure to set the button's ID using the <CodeInline>&#64;context</CodeInline> parameter.
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" ShowCode="false" Code="FileUploadButtonExample">
                <FileUploadButtonExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Multiple and Accept">
                <Description>Allow multiple files with <CodeInline>Multiple</CodeInline> or limit the valid file types with <CodeInline>Accept</CodeInline>.</Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" ShowCode="false" Code="FileUploadMultipleAcceptExample">
                <FileUploadMultipleAcceptExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Form Validation">
                <Description>
                    Use the <CodeInline>For</CodeInline> property to validate your files within a form, and bind your files to your model class using <CodeInline>&#64;bind-FileValue</CodeInline>.
                    You can then handle the file upload logic within your <CodeInline>MudForm</CodeInline> submit method.
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" ShowCode="false" Code="FileUploadValidationExample">
                <FileUploadValidationExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Drag and Drop Example">
                <Description>Using the example below, you can compose a drag-and-drop uploader.</Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" ShowCode="false" Code="DragAndDropFileUploadExample">
                <DragAndDropFileUploadExample />
            </SectionContent>
        </DocsPageSection>

    </DocsPageContent>
</DocsPage>
