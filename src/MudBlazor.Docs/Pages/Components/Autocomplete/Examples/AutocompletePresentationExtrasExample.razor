@using System.Net.Http.Json
@using MudBlazor.Examples.Data.Models
@namespace MudBlazor.Docs.Examples
@inject HttpClient httpClient

<MudGrid>
    <MudItem xs="12" sm="6" md="4">
        <MudAutocomplete T="Element" Label="Periodic Table Element" @bind-Value="value1"
                         SearchFunc="@Search" ToStringFunc="@(e=> e==null?null : $"{e.Name} ({e.Sign})")">
            <MoreItemsTemplate>
                <MudText Align="Align.Center" Class="px-4 py-1">
                    Only the first 10 items are shown
                </MudText>
            </MoreItemsTemplate>
        </MudAutocomplete>
    </MudItem>
    <MudItem xs="12" sm="6" md="4">
        <MudAutocomplete T="Element" Label="Periodic Table Element" @bind-Value="value2"
                         SearchFunc="@SearchEmpty" ToStringFunc="@(e=> e==null?null : $"{e.Name} ({e.Sign})")">
            <NoItemsTemplate>
                <MudText Align="Align.Center" Class="px-4 py-1">
                    No items found
                </MudText>
            </NoItemsTemplate>
        </MudAutocomplete>
    </MudItem>
</MudGrid>

@code {
    private Element value1, value2;

    private async Task<IEnumerable<Element>> Search(string value)
    {
        return await httpClient.GetFromJsonAsync<List<Element>>($"webapi/periodictable/{value}");
    }

    private async Task<IEnumerable<Element>> SearchEmpty(string value)
    {
        await Task.Delay(5);
        return Array.Empty<Element>();
    }
}
