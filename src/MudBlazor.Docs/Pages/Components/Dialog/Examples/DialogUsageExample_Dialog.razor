@namespace MudBlazor.Docs.Examples

<MudDialog>
    <DialogContent>
        Dialog Content
		<MudItem xs="12" sm="6" md="4">
			<MudSelect T="string" Label="Coffee" AnchorOrigin="Origin.BottomCenter">
				<MudSelectItem Value="@("Cappuccino")" />
				<MudSelectItem Value="@("Cafe Latte")" />
				<MudSelectItem Value="@("Espresso")" />
				<MudSelectItem Value="@("Irish Coffee")" />
			</MudSelect>
		</MudItem>
		<MudItem xs="12" sm="6" md="4">
			<MudAutocomplete T="string" Label="US States" @bind-Value="value1" SearchFunc="@Search1" Variant="Variant.Outlined" />
		</MudItem>
		<MudCheckBox @bind-Checked="@Basic_CheckBox2" Color="Color.Primary"></MudCheckBox>
		<MudSwitch @bind-Checked="@Basic_Switch2" Color="Color.Primary" />
		<MudItem xs="12" sm="6" md="4">
			<MudTimePicker Label="12 hours" AmPm="true" @bind-Time="time" />
		</MudItem>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();

	private string value1;
    private string[] states =
    {
        "Alabama", "Alaska", "American Samoa", "Arizona",
        "Arkansas", "California", "Colorado", "Connecticut",
        "Delaware", "District of Columbia", "Federated States of Micronesia",
        "Florida", "Georgia", "Guam", "Hawaii", "Idaho",
        "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky",
        "Louisiana", "Maine", "Marshall Islands", "Maryland",
        "Massachusetts", "Michigan", "Minnesota", "Mississippi",
        "Missouri", "Montana", "Nebraska", "Nevada",
        "New Hampshire", "New Jersey", "New Mexico", "New York",
        "North Carolina", "North Dakota", "Northern Mariana Islands", "Ohio",
        "Oklahoma", "Oregon", "Palau", "Pennsylvania", "Puerto Rico",
        "Rhode Island", "South Carolina", "South Dakota", "Tennessee",
        "Texas", "Utah", "Vermont", "Virgin Island", "Virginia",
        "Washington", "West Virginia", "Wisconsin", "Wyoming",
    };

    private async Task<IEnumerable<string>> Search1(string value)
    {
        // In real life use an asynchronous function for fetching data from an api.
        await Task.Delay(5);

        // if text is null or empty, show complete list
        if (string.IsNullOrEmpty(value))
            return states;
        return states.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }

	public bool Basic_CheckBox2 { get; set; } = false;
	public bool Basic_Switch2 { get; set; } = true;

	TimeSpan? time = new TimeSpan(00, 45, 00);
}
