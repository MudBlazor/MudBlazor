@namespace MudBlazor.Docs.Examples


<MudTimeline ItemsSource="_items">
    <ItemTemplate>
        <MudCard>
            <MudCardHeader Class="@context.HeaderClass()">
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">@($"{context.From} {(context.From == "Client" ? "(Me)" : "")}")</MudText>
                    <MudText Typo="Typo.caption">@context.When</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>@((MarkupString)context.Content)</MudText>
            </MudCardContent>
        </MudCard>
    </ItemTemplate>
</MudTimeline>


@code { 


    
    private IEnumerable<SupportTicketMessage> _items;

    protected override async Task OnInitializedAsync()
    {
        await LoadItems();
    }

    private async Task LoadItems()
    {
        await Task.Run(() =>
            _items = new List<SupportTicketMessage>
            {
                new()
                {
                    From = "Client",
                    When = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1, 9, 34, 0),
                    Content = "Please help me!"
                },
                new()
                {
                    From = "Support (Bot)",
                    When = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1, 9, 35, 0),
                    Label = MessageLabel.Tracking,
                    Content = "Thank you for contacting us. An attendant you join this chat soon."
                },
                new()
                {
                    From = "Support",
                    When = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 2, 12, 17, 0),
                    Content = "What's your problem?"
                },
                }
            );
    }

    public class SupportTicketMessage
    {
        public string From { get; set; }
        public DateTime? When { get; set; }
        public MessageLabel Label { get; set; }
        public string Content { get; set; }
        public byte[] Attachment { get; set; }
        public AttachmentType AttachmentType { get; set; }

        public string HeaderClass()
        {
            if (From == "Client")
                return "mud-theme-primary";

            return Label switch
            {
                MessageLabel.Bug => @"mud-theme-error",
                MessageLabel.Tracking => @"mud-theme-success",
                _ => @"mud-theme-secondary"
            };
        }
    }

    public enum MessageLabel
    {
        Default = 0,
        Bug = 1,
        Tracking = 2
    }

    public enum AttachmentType
    {
        File = 0,
        PdfDocument = 1,
        Image = 2,
        Workbook = 3,
        Unknown = 4

    }


} 