@page "/components/form"


<DocsPage>
    <DocsPageHeader Title="Form Validation" SubTitle="All about checking user input and visualization of errors" />
    <DocsPageContent>

        <DocsPageSection>
            <SectionHeader>
                <Title>Simple form validation</Title>
                <Description>
                    <CodeInline>MudForm</CodeInline> is designed to be easy and simple. In contrast to EditForm (see below) MudForm doesn't force you to have an annotated model for your form.
                    You just pass your own validation functions directly into the <CodeInline>Validation</CodeInline> parameter of your input controls.
                    But if you want to use data annotation attributes, you can pass them into <CodeInline>Validation</CodeInline> also. <br />
                    <MudAlert Severity="Severity.Info" Dense="true" Class="mt-3">Note: for MudForm, do NOT use a button with <CodeInline>ButtonType="ButtonType.Submit"</CodeInline></MudAlert>
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true">
                <MudContainer>
                    <MudFormExample />
                </MudContainer>
            </SectionContent>
            <SectionSource ShowCode="false" Code="MudFormExample" GitHubFolderName="Form" />
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader>
                <Title>EditForm</Title>
                <Description>
                    In Blazor form validation is usually done with EditForm in conjunction with a form model class that is decorated with <MudLink Href="https://docs.microsoft.com/en-us/aspnet/core/mvc/models/validation?view=aspnetcore-3.1">data annotations</MudLink>. MudBlazor's input components support
                    Blazor's form validation if you put them into a <CodeInline>&lt;EditForm&gt;</CodeInline>. The following example shows a very simple use case. If you want to learn more please check out
                    <MudLink Href="https://docs.microsoft.com/en-us/aspnet/core/blazor/forms-validation?view=aspnetcore-3.1">ASP.NET Core Blazor forms and validation</MudLink> on the official Blazor documentation.
                    <br /><br />
                    <MudAlert Severity="Severity.Info" Dense="true" Class="mt-3">
                        Note: for EditForm validation to work make sure to set <CodeInline>ButtonType="ButtonType.Submit"</CodeInline> and do not use a MudForm.
                    </MudAlert>
                    <MudAlert Severity="Severity.Info" Dense="true" Class="mt-3">
                        Note: do NOT set <CodeInline>Error</CodeInline> or <CodeInline>ErrorText</CodeInline> because they would overwrite the state and error message generated by the data annotations.
                    </MudAlert>
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true">
                <MudContainer>
                    <EditFormExample />
                </MudContainer>
            </SectionContent>
            <SectionSource ShowCode="false" Code="EditFormExample" GitHubFolderName="Form" />
        </DocsPageSection>
    </DocsPageContent>
</DocsPage>

