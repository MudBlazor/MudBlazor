@page "/components/icons"
@using System.Reflection

<DocsPage>
    <DocsPageHeader Title="Icons" SubTitle="Guidance and suggestions for using icons with MudBlazor.">
    </DocsPageHeader>
    <DocsPageContent>

        <DocsPageSection>
            <SectionHeader Title="Icons">
                <Description>
                    See the full list of all icons that comes preloaded here: <MudLink Href="/features/icons">MudBlazor Icons</MudLink>
                </Description>
            </SectionHeader>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Usage">
                <Description>The MudIcon component shows the specified icon with the chosen style. You can use the <CodeInline>Title</CodeInline> attribute to improve accessibility with screen readers and show a tooltip on hover.</Description>
            </SectionHeader>
            <SectionContent Code="@nameof(IconsUsageExample)">
                <IconsUsageExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Color">
            </SectionHeader>
            <SectionContent Code="@nameof(IconsColorExample)">
                <IconsColorExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Size">
            </SectionHeader>
            <SectionContent Code="@nameof(IconsSizeExample)">
                <IconsSizeExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Material Variants">
                <Description>Material icons that comes loaded with MudBlazor by default is available in Filled, Outlined, Rounded, Sharp and TwoToned.</Description>
            </SectionHeader>
            <SectionContent Code="@nameof(IconsMaterialVariantsExample)">
                <IconsMaterialVariantsExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Font Icons">
                <Description>The MudIcon component will display any icon font that supports ligatures.<br />For example, you can use <MudLink Color="Color.Secondary" Href="https://fontawesome.com/">Font Awesome</MudLink> or <MudLink Color="Color.Secondary" Href="https://fonts.google.com/icons">Material Symbols</MudLink>.</Description>
            </SectionHeader>
            <SectionSubGroups>
                <DocsPageSection>
                    <SectionHeader Title="CSS Class-Based Icons via pseudo-elements">
                        <Description>Some icon libraries allow you to add icons to your web page using simple CSS class names.
                            The icon is rendered via CSS pseudo-elements, which means you don't need to include any inner text in the <CodeInline>span</CodeInline> element.
                            Just add the appropriate class, and the icon will be displayed.
                        </Description>
                    </SectionHeader>
                    <SectionContent DarkenBackground="true" Code="@nameof(IconsFontAwesomeExample)">
                        <IconsFontAwesomeExample />
                    </SectionContent>
                </DocsPageSection>

                <DocsPageSection>
                    <SectionHeader Title="Text-Based Icons via Inner Text">
                        <Description>
                            Some icon libraries use the inner text of an HTML element to determine which icon to display. The text inside the <CodeInline>span</CodeInline> element corresponds to the name of the icon in the font.
                            This approach requires you to specify the icon name as the content of the element.
                            <br />
                            <br />
                            MudBlazor offers two ways to define such icons:
                            <div class="d-flex flex-column px-2">
                                <MudBadge Class="mt-1" Color="Color.Primary" Dot="true" Origin="Origin.CenterLeft">
                                    <div class="pl-4 docs-line-height-normal">
                                        Add the icon name directly as the content of the HTML element.
                                    </div>
                                </MudBadge>
                                <MudBadge Class="mt-1" Color="Color.Primary" Dot="true" Origin="Origin.CenterLeft">
                                    <div class="pl-4 docs-line-height-normal">
                                        Use a special syntax where the icon name is specified after a slash <CodeInline>/</CodeInline> following the class name.
                                        For example: <CodeInline>material-symbols-outlined/home</CodeInline>
                                    </div>
                                </MudBadge>
                            </div>
                            
                            <MudAlert Severity="Severity.Info" Class="mt-3">
                                We recommend using the special syntax approach. This method is preferred because other elements that expose an <CodeInline>Icons</CodeInline> property only support this syntax.
                            </MudAlert>
                        </Description>
                    </SectionHeader>
                    <SectionContent DarkenBackground="true" Code="@nameof(IconsFontMaterialSymbolsSyntaxExample)">
                        <IconsFontMaterialSymbolsSyntaxExample />
                    </SectionContent>
                </DocsPageSection>
            </SectionSubGroups>
@*             <SectionContent Code="@nameof(IconsFontAwesomeExample)">
                <IconsFontAwesomeExample />
            </SectionContent>
            <SectionContent Code="@nameof(IconsFontMaterialSymbolsSyntax)">
                <IconsFontMaterialSymbolsSyntax />
            </SectionContent> *@
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Custom Icons">
                <Description>
                    The icon parameter of <CodeInline Tag="true">MudIcon</CodeInline>, <CodeInline Tag="true">MudButton</CodeInline> and other components are just SVG strings. 
                    So changing an icon programmatically is as easy as assigning a new string.<br />
                    Also, if the icon you need is not available in <MudLink Href="/features/icons">MudBlazor's icon library</MudLink> you can just assign your own SVG. 
                    The cube icon in this example is <CodeInline>cube-outline</CodeInline> from <MudLink Color="Color.Secondary" Href="https://materialdesignicons.com" Style="white-space:nowrap;">Material Design Icons</MudLink>.
                </Description>
            </SectionHeader>
            <SectionContent Code="@nameof(ChangeIconProgrammaticallyExample)">
                <ChangeIconProgrammaticallyExample />
            </SectionContent>
        </DocsPageSection>

    </DocsPageContent>
</DocsPage>
