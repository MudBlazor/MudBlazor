@using System.Net.Http.Json
@using MudBlazor.Examples.Data.Models
@namespace MudBlazor.Docs.Examples
@inject HttpClient httpClient

<MudDataGrid Items="@Elements" Filterable="true" FilterMode="@_filterMode" FilterCaseSensitivity="@_caseSensitivity">
    <Columns>
        <PropertyColumn Property="x => x.Number" Title="Nr" Filterable="false" />
        <PropertyColumn Property="x => x.Sign" />
        <PropertyColumn Property="x => x.Name">
            <SimpleFilterTemplate>
                <MudItem xs="3">
                    <MudSelect @bind-Value="context.Operator" FullWidth="true" Label="Operator" Dense="true" Margin="@Margin.Dense"
                               Class="filter-operator">
                        @foreach (var fieldOperator in operators_local)
                        {
                            <MudSelectItem Value="@fieldOperator">@fieldOperator</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="4">
                    <MudTextField T="string" ValueChanged="@(x => context.Value = x)" FullWidth="true" Label="Value" Placeholder="FilterValue" Margin="@Margin.Dense"
                                  Immediate="true" Class="filter-input" />
                </MudItem>
            </SimpleFilterTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.Position" Filterable="false" />
        <PropertyColumn Property="x => x.Molar" Title="Molar mass" />
        <PropertyColumn Property="x => x.Group" Title="Category">
            <SimpleFilterTemplate>
                @Filter(context)
            </SimpleFilterTemplate>
        </PropertyColumn>
    </Columns>
    <PagerContent>
        <MudDataGridPager T="Element" />
    </PagerContent>
</MudDataGrid>

<div class="d-flex flex-wrap mt-4">
    <MudRadioGroup T="DataGridFilterMode" @bind-SelectedOption="@_filterMode">
        <MudRadio Dense="true" Option="@DataGridFilterMode.Simple" Color="Color.Primary">Simple</MudRadio>
        <MudRadio Dense="true" Option="@DataGridFilterMode.ColumnFilterMenu" Color="Color.Tertiary">Column Menu</MudRadio>
        <MudRadio Dense="true" Option="@DataGridFilterMode.ColumnFilterRow">Column Row</MudRadio>
    </MudRadioGroup>
</div>

<div class="d-flex flex-wrap mt-4">
    <MudRadioGroup T="DataGridFilterCaseSensitivity" @bind-SelectedOption="@_caseSensitivity">
        <MudRadio Dense="true" Option="@DataGridFilterCaseSensitivity.Default" Color="Color.Primary">Default Case Sensitivity</MudRadio>
        <MudRadio Dense="true" Option="@DataGridFilterCaseSensitivity.CaseInsensitive" Color="Color.Tertiary">Case Insensitive</MudRadio>
    </MudRadioGroup>
</div>


@code {
    IEnumerable<Element> Elements = new List<Element>();
    DataGridFilterMode _filterMode = DataGridFilterMode.Simple;
    DataGridFilterCaseSensitivity _caseSensitivity = DataGridFilterCaseSensitivity.Default;
    string[] operators_local = new string[] { "contains", "not contains" };

    protected override async Task OnInitializedAsync()
    {
        Elements = await httpClient.GetFromJsonAsync<List<Element>>("webapi/periodictable");
    }

    internal RenderFragment Filter(IFilterDefinition<Element> filterDefinition) =>
    @<text>
        @{
            string[] operators = new string[] { "contains", "not contains" };
        }

        <MudItem xs="3">
            <MudSelect @bind-Value="filterDefinition.Operator" FullWidth="true" Label="Operator" Dense="true" Margin="@Margin.Dense"
                       Class="filter-operator">
                @foreach (var fieldOperator in operators)
                {
                    <MudSelectItem Value="@fieldOperator">@fieldOperator</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
        <MudItem xs="4">
            <MudTextField T="string" ValueChanged="@(x => filterDefinition.Value = x)" FullWidth="true" Label="Value" Placeholder="FilterValue" Margin="@Margin.Dense"
                          Immediate="true" Class="filter-input" />
        </MudItem>
    </text>;
}
