@page "/components/datagrid"

<DocsPage>
    <DocsPageHeader Title="DataGrid - Experimental" SubTitle="A sortable, filterable data grid with multiselection and pagination" />
    <DocsPageContent>

        <DocsPageSection>
            <MudAlert Severity="Severity.Warning">
                <b>Warning experimental component!</b>
            </MudAlert>
            <MudAlert Class="mt-4" Severity="Severity.Error">
                This component is under active development and breaking changes will occur even in minor patch releases.<br/>
                <b>DO NOT</b> use this component if you are not prepared to update your code and adapt to new changes.<br />
                The finished component might not have the same name, might not have the features it has now, or look the same.
            </MudAlert>
        </DocsPageSection>
        <DocsPageSection>
            <SectionHeader Title="Default Data Grid">
                <Description>
                    The <CodeInline>&lt;MudDataGrid></CodeInline> is used to display and work with small amounts of data up to very large datasets, easily and efficiently. In it's 
                    simplest form, the data grid is a just a table, displaying data from a data source.
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" Code="DataGridBasicExample" ShowCode="false" Block="true" FullWidth="true">
                <DataGridBasicExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Advanced Data Grid">
                <Description>
                    In a more advanced scenario, the data grid offers sorting, filtering, pagination and selection. There are two ways to filter the data 
                    fed into the data grid. A <CodeInline>QuickFilter</CodeInline> function allows filtering the items in the grid globally. Data can also be filtered by specifying 
                    column filters, enabling a more robust filtration.
                    <br><br>
                    In this example, we turn sorting and filtering off for the Nr column using the boolean <CodeInline>Sortable</CodeInline> and <CodeInline>Filterable</CodeInline> properties
                    as well as hide the column options icon button by setting the <CodeInline>ShowColumnOptions</CodeInline> property to <CodeInline>false</CodeInline> (which is hidden by default). Additionally, we 
                    can override the default <CodeInline>SortBy</CodeInline> function for each column, seen in the Name column where we show how you can switch to a sort by the Name's length.
                    <br><br>
                    To hide the filter icons unless a column is currently filtered, you can set the <CodeInline>ShowFilterIcons</CodeInline> property to false.
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" Code="DataGridAdvancedExample" ShowCode="false" Block="true" FullWidth="true">
                <DataGridAdvancedExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Visual Styling">
                <Description>
                    The <CodeInline>&lt;MudDataGrid></CodeInline> has many built in properties to change its style and also allows for custom styling as well.
                    <br><br>
                    Row level classes and styles can be applied using the <CodeInline>RowClass</CodeInline> and <CodeInline>RowStyle</CodeInline> properties 
                    respectively. To style rows according to the data of the row, you would use the <CodeInline>RowClassFunc</CodeInline> and <CodeInline>RowStyleFunc</CodeInline>
                    properties. For even finer grain control, you can style at the header, cell and footer level as well by using the <CodeInline>CellClass</CodeInline>, 
                    <CodeInline>CellStyle</CodeInline>, <CodeInline>CellClassFunc</CodeInline>, <CodeInline>CellStyleFunc</CodeInline>, etc. properties. However, the header and footer
                    do not have the Func properties since they are not needed.
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" Code="DataGridVisualStylingExample" ShowCode="false" Block="true" FullWidth="true">
                <DataGridVisualStylingExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Editing">
                <Description>
                    The <CodeInline>&lt;MudDataGrid></CodeInline> allows editing the data passed into it. Setting the <CodeInline>ReadOnly</CodeInline> property
                    to <CodeInline>false</CodeInline> and the <CodeInline>EditMode</CodeInline> property to turns editing. There are two different edit modes:
                    <CodeInline>Cell and Form</CodeInline>. <CodeInline>Form</CodeInline> displays a form in a popup when editing. <CodeInline>Cell</CodeInline> is more like 
                    excel where each cell is ready to edit and as you make edits, they are applied to the data source. To disable editing on a column, set its 
                    <CodeInline>IsEditable</CodeInline> property to <CodeInline>false</CodeInline>.
                    <br><br>
                    By default, the built in editing in the data grid automatically supplies the proper input component for each cell. However, this can be overidden
                    by supplying an <CodeInline>&lt;EditTemplate></CodeInline>. Inside the template, you have full control over the editing. Take a look at the Position
                    column below.

                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" Code="DataGridEditingExample" ShowCode="false" Block="true" FullWidth="true">
                <DataGridEditingExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Grouping">
                <Description>
                    The <CodeInline>&lt;MudDataGrid></CodeInline> allows you to group data by column. Setting the <CodeInline>Grouping</CodeInline> property
                    to <CodeInline>true</CodeInline> will turn on grouping which will add a menu item in the column options to toggle grouping of that column. 
                    To disable editing on a column, set its <CodeInline>IsEditable</CodeInline> property to <CodeInline>false</CodeInline>.

                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" Code="DataGridGroupingExample" ShowCode="false" Block="true" FullWidth="true">
                <DataGridGroupingExample />
            </SectionContent>
        </DocsPageSection>

         <DocsPageSection>
            <SectionHeader Title="Sorting">
                <Description>
                    The <CodeInline>&lt;MudDataGrid></CodeInline> allows you to either disable sorting entirely, sort by single column or by multiple columns via
                    the <CodeInline>SortMode</CodeInline> property. The default (<CodeInline>SortMode.Multiple</CodeInline>) allows sorting on more than one column (Hold <CodeInline>Ctrl-Key</CodeInline>) while clicking
                    on a header column to extend the sort operation to another column.<br />
                    Clicking on the column header while <CodeInline>Alt-Key</CodeInline> is pressed, will un-sort a column (or remove it from the set of sorted columns) when multiple sorting
                    is enabled. In the case of multiple sorting, a small index-number next to the sort direction arrow will indicate the order in which columns are sorted.<br />
                    When mode is set to <CodeInline>SortMode.Single</CodeInline>, only a single column can be used for sorting at a time. Using another column for sorting will automatically 
                    un-sort any former sorted column. In single mode, the number indicator next to the direction arrow will not be shown.<br/><br/>
                    In both <i>active</i> modes, single columns can be excluded from sorting by setting the <CodeInline>Sortable</CodeInline> property to false for that column.
                    When SortMode is set to <CodeInline>SortMode.None</CodeInline> sorting is disabled globally and setting the <CodeInline>Sortable</CodeInline> property on a column has no effect.
                    <MudAlert Severity="Severity.Info" Dense="true" Class="my-1">Changing the SortMode at runtime will reset any former sort orders on all columns.</MudAlert>
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" Code="DataGridSortingExample" ShowCode="false" Block="true" FullWidth="true">
                <DataGridSortingExample />
            </SectionContent>
        </DocsPageSection>

         <DocsPageSection>
            <SectionHeader Title="Filtering">
                <Description>
                    The <CodeInline>&lt;MudDataGrid></CodeInline> supports filtering with several different <CodeInline>DataGridFilterMode</CodeInline>s by setting the <CodeInline>FilterMode</CodeInline> property.
                    <CodeInline>DataGridFilterMode.Simple</CodeInline> is the default where all filters are managed in one popover in the data grid. It allows you to
                    set multiple filters at one time for multiple different columns. In <CodeInline>DataGridFilterMode.ColumnFilterMenu</CodeInline> mode, there is a dedicated popover for 
                    each column. Lastly, <CodeInline>DataGridFilterMode.ColumnFilterRow</CodeInline> allows you to inline the filtering behavior directly into the data grid.
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" Code="DataGridFilteringExample" ShowCode="false" Block="true" FullWidth="true">
                <DataGridFilteringExample />
            </SectionContent>
        </DocsPageSection>

         <DocsPageSection>
            <SectionHeader Title="Advanced Filtering">
                <Description>
                    It is possible to customize filtering by utilizing the <CodeInline>&lt;FilterTemplate></CodeInline> available on the <CodeInline>&lt;MudDataGrid></CodeInline>
                    as well as each <CodeInline>&lt;Column></CodeInline>. In the example below, the Sign column is customized.
                    <br><br>
                    Inside of the <CodeInline>&lt;FilterTemplate></CodeInline> on the data grid while using <CodeInline>DataGridFilterMode.Simple</CodeInline>, the context is set to the 
                    data grid's FilterDefinitions to allow for customizing the filtering behavior.
                    <br><br>
                    When using the <CodeInline>&lt;FilterTemplate></CodeInline> in the column specific filter modes, the context is a <CodeInline>DataGridFilterMode.Simple</CodeInline>
                    which gives access to several helpful properties and actions. For example, the current <CodeInline>FilterDefinition</CodeInline> related to the column is available as well
                    as several actions to make it easier to implement custom filter behavior such as <CodeInline>ApplyFilter</CodeInline> and <CodeInline>ClearFilter</CodeInline>.
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" Code="DataGridAdvancedFilteringExample" ShowCode="false" Block="true" FullWidth="true">
                <DataGridAdvancedFilteringExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Resizing">
                <Description>
                    The <CodeInline>&lt;MudDataGrid></CodeInline> allows you to resize columns interactively when
                    <CodeInline>ColumnResizeMode</CodeInline> is not set to <CodeInline>None</CodeInline>, which is the default.
                    There are two modes for resizing: <CodeInline>ResizeMode.Container</CodeInline> and <CodeInline>ResizeMode.Column</CodeInline>.
                    <CodeInline>ResizeMode.Container</CodeInline> resizes the entire data grid while <CodeInline>ResizeMode.Column</CodeInline> only resizes
                    columns using available space within the data grid.
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" Code="DataGridResizeExample" ShowCode="false" Block="true" FullWidth="true">
                <DataGridResizeExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Data Aggregation">
                <Description>
                    The <CodeInline>&lt;MudDataGrid></CodeInline> allows you to aggregate data in several different ways. Data aggregation happens in the 
                    footer of the grid for the most part. By setting an <CodeInline>AggregateDefinition</CodeInline>, you can easily add a quick built-in aggregate
                    or choose to tailor the display to your needs. There are 6 different <CodeInline>AggregateTypes</CodeInline> that can be used with the 
                    <CodeInline>AggregateDefinition</CodeInline>: Avg, Count, Custom, Max, Min and Sum. For more control over the data aggregation, you can choose the
                    <CodeInline>AggregationType.Custom</CodeInline> and supply your own function which will return a formatted string to display. Lastly, for 
                    complete control over the data aggregation including the look and feel, you use <CodeInline>&lt;FooterTemplate></CodeInline> which has it's
                    context set to the <CodeInline>CurrentPageItems</CodeInline>.
                    <br><br>
                    Aggregation is automatically applied to groups when the data grid is grouped by a column. Try it out by grouping the Status column!
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" Code="DataGridAggregationExample" ShowCode="false" Block="true" FullWidth="true">
                <DataGridAggregationExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Advanced Data Grid Using IDictionary">
                <Description>
                    This example uses a <CodeInline>List&lt;IDictionary&lt;string, object>></CodeInline> for the <CodeInline>Items</CodeInline> data source.
                    <br><br>
                    In a more advanced scenario, the data grid offers sorting, filtering, pagination and selection. There are two ways to filter the data 
                    fed into the data grid. A <CodeInline>QuickFilter</CodeInline> function allows filtering the items in the grid globally. Data can also be filtered by specifying 
                    column filters, enabling a more robust filtration.
                    <br><br>
                    In this example, we turn sorting and filtering off for the Nr column using the boolean <CodeInline>Sortable</CodeInline> and <CodeInline>Filterable</CodeInline> properties
                    as well as hide the column options icon button by setting the <CodeInline>ShowColumnOptions</CodeInline> property to <CodeInline>false</CodeInline>. Additionally, we 
                    can override the default <CodeInline>SortBy</CodeInline> function for each column, seen in the Name column where we show how you can switch to a sort by the Name's length.
                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" Code="DataGridAdvancedIDictionaryExample" ShowCode="false" Block="true" FullWidth="true">
                <DataGridAdvancedIDictionaryExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Sticky Columns">
                <Description>
                    The <CodeInline>&lt;MudDataGrid></CodeInline> allows you to make a column stick to the left or right. Setting the <CodeInline>StickyLeft</CodeInline> or <CodeInline>StickyRight</CodeInline> properties
                    to <CodeInline>true</CodeInline> will make those columns "sticky". You must turn on <CodeInline>HorizontalScrollbar</CodeInline> to see the columns stick to either side.
                    <br><br>
                    There are a couple of things to keep in mind with sticky columns. First, if there are not enough columns and data to force the data grid to scroll, you will not see 
                    the columns stick, and that is by design and simply how sticky works in CSS. Secondly, there is nothing stopping you from making multiple columns sticky, but it will 
                    not have the effect you presumably intend. Instead, each column will be sticky when it reached the left or right side of the data grid and will overlap the sticky column
                    before it.

                </Description>
            </SectionHeader>
            <SectionContent DarkenBackground="true" Code="DataGridStickyColumnsExample" ShowCode="false" Block="true" FullWidth="true">
                <DataGridStickyColumnsExample />
            </SectionContent>
        </DocsPageSection>

    </DocsPageContent>
</DocsPage>
