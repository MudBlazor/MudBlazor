@namespace MudBlazor.Docs.Examples
@using MudBlazor.Components.Chart.Models

<div>
    <MudTimeSeriesChart ChartSeries="@Series" @bind-SelectedIndex="Index" Width="100%" Height="350px" ChartOptions="@Options" CanHideSeries TimeLabelSpacing="TimeSpan.FromMinutes(5)" />
    <MudGrid>
        <MudItem xs="6">
            <MudText Typo="Typo.body1" Class="py-3">Selected: @(Index < 0 ? "None" : Series[Index].Name)</MudText>
        </MudItem>
        <MudItem xs="6">
            <MudSlider @bind-Value="Options.LineStrokeWidth" Min="1" Max="10" Color="Color.Info">Line Width: @Options.LineStrokeWidth.ToString()</MudSlider>
        </MudItem>
    </MudGrid>
</div>

@code
{
    private int Index = -1; //default value cannot be 0 -> first selectedindex is 0.
    public ChartOptions Options = new ChartOptions
        {
            YAxisLines = false,
            YAxisTicks = 500,
            MaxNumYAxisTicks = 10,
            YAxisRequireZeroPoint = true,
            XAxisLines = false,
        };

    private TimeSeriesChartSeries _chart1 = new();

    private List<TimeSeriesChartSeries> Series = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        var now = DateTime.Now;

        var rand = new Random();

        _chart1 = new ()
            {
                Index = 0,
                Name = "Series 1",
                Data = Enumerable.Range(-360, 360).Select(x => new TimeSeriesChartSeries.TimeValue(now.AddSeconds(x * 10), rand.Next(2000, 15000))).ToList(),
                IsVisible = true,
                Type = TimeSeriesDiplayType.Area,
                StrokeOpacity = 0.6,
                FillOpacity = 0.4,
            };

        Series.Add(_chart1);

        StateHasChanged();
    }
}