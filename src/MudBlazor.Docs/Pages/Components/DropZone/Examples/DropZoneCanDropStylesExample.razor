@namespace MudBlazor.Docs.Examples

<MudItemDropContainer T="DropItem" ApplyDropClassesOnDragStarted="_applyDropClassesOnDragStarted" Items="_items" ItemsSelector="@((item,dropzone) => item.Place == dropzone)" CanDropClass="mud-theme-success" NoDropClass="mud-theme-error" ItemDropped="ItemUpdated" Class="d-flex">
	<ChildContent>
		<MudItemDropZone T="DropItem" Identifier="Basket" Class="mx-8 pa-4 docs-gray-bg rounded" CanDrop="@( (item) => false )">
			<MudText Typo="Typo.h6" Class="mb-4">Basket</MudText>
		</MudItemDropZone>
		<MudItemDropZone T="DropItem" Identifier="Fridge" Class="mx-8 pa-4 docs-gray-bg rounded" CanDrop="@( (item) => item.IsPicked == false && item.IsRotten == false )">
			<MudText Typo="Typo.h6" Class="mb-4">Fridge</MudText>
		</MudItemDropZone>
		<MudItemDropZone T="DropItem" Identifier="Trash" CanDrop="@( (item) => item.IsPicked == false && item.IsRotten == true)" Class="mx-8 pa-4 docs-gray-bg rounded">
			<MudText Typo="Typo.h6" Class="mb-4">Trash</MudText>
		</MudItemDropZone>
	</ChildContent>
	<ItemRenderer>
		<MudPaper Elevation="25" Class="pa-4 my-2">
			<MudText Color="@(context.IsRotten? Color.Success : Color.Default)">@context.Name</MudText>
		</MudPaper>
	</ItemRenderer>
</MudItemDropContainer>

<MudCheckBox @bind-Checked="_applyDropClassesOnDragStarted" Label="Apply Drop Classes On Drag Started" />
<MudButton OnClick="Reset">Reset</MudButton>

@code {
	private bool _applyDropClassesOnDragStarted = false;

	private void Reset()
	{
		foreach (var item in _items)
		{
			item.Place = "Basket";
			item.IsPicked = false;
		}
	}

	private void ItemUpdated(MudItemDropInfo<DropItem> dropItem)
	{
		dropItem.Item.IsPicked = true;
		dropItem.Item.Place = dropItem.DropzoneIdentifier;
	}

	private List<DropItem> _items = new()
		{
			new DropItem() { Name = "Tomato", IsRotten = false, Place = "Basket" },
			new DropItem() { Name = "Tomato", IsRotten = true, Place = "Basket" },
		};

	public class DropItem
	{
		public string Name { get; init; }
		public bool IsRotten { get; set; }
		public bool IsPicked { get; set; } = false;
		public string Place { get; set; }
	}
}
