@page "/customization/default-theme"
@using System.Globalization
@using System.Reflection

<DocsPage>
    <DocsPageHeader Title="Default Theme" SubTitle="Here's the default theme class with the default values.">
    </DocsPageHeader>
    <DocsPageContent>
        <DocsPageSection>
            <SectionHeader Title="MudTheme">
            </SectionHeader>
            <MudPaper Class="docs-expand-wrapper">
                <MudExpansionPanels MultiExpansion="true" Elevation="0" Class="docs-default-theme">
                    <MudExpansionPanel Text="Palette">
                        @foreach (var _pal in typeof(Palette).GetProperties())
                        {
                            <div class="mt-1">
                                <MudText Inline="true">@_pal.Name</MudText>
                                <MudText Inline="true" Style="color:#d69d85;">@_pal.GetValue(palette, null)</MudText>
                            </div>
                        }
                    </MudExpansionPanel>
                    <MudExpansionPanel Text="Shadows">
                        <div>
                            <MudText>Elevation[]: </MudText>
                            @for (int i = 0; i < mudTheme.Shadows.Elevation.Length; i++)
                            {
                                int a = i;
                                <div>
                                    <MudTooltip Text="@($"Elevation {a.ToString()}")">
                                        <MudText Class="mt-1" Style="color:#d69d85;">@mudTheme.Shadows.Elevation.GetValue(a)</MudText>
                                    </MudTooltip>
                                </div>   
                            }
                        </div>
                    </MudExpansionPanel>
                    <MudExpansionPanel Text="LayoutProperties">
                        @* List not obsolete ones *@
                        @foreach (var _layout in typeof(LayoutProperties).GetProperties())
                        {
                            var attr = (ObsoleteAttribute)_layout.GetCustomAttribute(typeof(ObsoleteAttribute));

                            if (attr == null)
                            {
                                <div class="mt-1">
                                    <MudText Inline="true">@_layout.Name</MudText>
                                    <MudText Inline="true" Style="color:#d69d85;">@_layout.GetValue(layoutProperties, null)</MudText>
                                </div>
                            }
                        }

                        @* List obsolete ones *@
                        @foreach (var _layout in typeof(LayoutProperties).GetProperties())
                        {
                            var attr = (ObsoleteAttribute)_layout.GetCustomAttribute(typeof(ObsoleteAttribute));

                            if (attr != null)
                            {
                                <div class="mt-1">
                                    <MudText Inline="true">@_layout.Name</MudText>
                                    <MudText Inline="true" Style="color:#d69d85;">Obsolete</MudText>
                                </div>
                            }
                        }
                    </MudExpansionPanel>
                    <MudExpansionPanel Text="ZIndex">
                        @foreach (var _zIndex in typeof(ZIndex).GetProperties())
                        {
                            <div class="mt-1">
                                <MudText Inline="true">@_zIndex.Name</MudText>
                                <MudText Inline="true" Style="color:#79cc41;">@_zIndex.GetValue(zIndex, null)</MudText>
                            </div>
                        }
                    </MudExpansionPanel>
                    <MudExpansionPanel Text="Typography">
                        @foreach (var _typography in typeof(Typography).GetProperties())
                        {
                        <div class="mt-1">
                            <MudText Inline="true">@_typography.Name</MudText>
                            @foreach (var item in _typography.GetValue(typography, null).GetType().GetProperties())
	                        {
		                        <div>
                                    <MudText Inline="true" Style="color:#d69d85;">@_typography.GetValue(typography, null).GetType().GetProperty(item.Name).Name :</MudText>
                                    @if (item.Name == "FontFamily")
                                    {
                                        string unifiedText = "";
                                        foreach (string a in defaultFontFamily)
                                        {
                                            if (unifiedText == "")
                                            {
                                                unifiedText += a;
                                            }
                                            else
                                            {
                                                unifiedText = unifiedText + ", " + a;
                                            }
                                        }
                                        <MudText Inline="true" Style="color:#79cc41;">@unifiedText</MudText>
                                    }
                                    else
                                    {
                                        <MudText Inline="true" Style="color:#79cc41;">@_typography.GetValue(typography, null).GetType().GetProperty(item.Name).GetValue(_typography.GetValue(typography, null), null)</MudText>
                                    }
                                </div>
	                        }
                        </div>
                        }
                    </MudExpansionPanel>
                </MudExpansionPanels>
            </MudPaper>

        </DocsPageSection>
        <DocsPageSection>
            <MudDivider Class="my-16" Style="opacity:0;" />
            @*You are cool like a swimming pool!*@
        </DocsPageSection>
    </DocsPageContent>
</DocsPage>
<Footer />

@code {
    MudTheme mudTheme = new MudTheme();
    Palette palette = new Palette();
    LayoutProperties layoutProperties = new LayoutProperties();
    ZIndex zIndex = new ZIndex();
    Typography typography = new Typography();
    string[] defaultFontFamily;

    protected override void OnInitialized()
    {
        palette = mudTheme.Palette;
        layoutProperties = mudTheme.LayoutProperties;
        zIndex = mudTheme.ZIndex;
        defaultFontFamily = mudTheme.Typography.Default.FontFamily;
    }
}