@import '../abstracts/variables';

.mud-drawer {
    display: flex;
    flex-shrink: 0;
    flex-grow: 1;
    flex: 0 0 auto;
    outline: 0;
    position: fixed;
    z-index: var(--mud-zindex-drawer);
    overflow-y: auto;
    flex-direction: column;
    color: var(--mud-palette-drawer-text);
    background-color: var(--mud-palette-drawer-background);
    --mud-drawer-content-height: 0;

    .mud-drawer-content {
        height: 100%;
        max-height: 100%;
        display: flex;
        flex-shrink: 0;
        flex-grow: 1;
        flex: 0 0 auto;
        flex-direction: column;
    }

    &:not(.mud-drawer-fixed) {
        position: absolute;
    }

    @each $breakpoint in map-keys($breakpoints) {
        &.mud-drawer-mini.mud-drawer-#{$breakpoint}:not(.mud-drawer--closed), &.mud-drawer-responsive.mud-drawer-#{$breakpoint} {
            @media (max-width: map-get($breakpoints, $breakpoint) - 1px) {
                z-index: calc(var(--mud-zindex-appbar) + 2);

                &.mud-drawer--initial:not(.mud-drawer-mini) {
                    display: none !important;
                }
            }
        }
    }

    &.mud-drawer-responsive, &.mud-drawer-persistent {
        height: 100%;

        &.mud-drawer-pos-left {
            right: auto;
            width: var(--mud-drawer-width, var(--mud-drawer-width-left));

            &.mud-drawer--open {
                left: 0;

                &:not(.mud-drawer--initial) {
                    animation: mud-drawer-slide-in-left 225ms cubic-bezier(0, 0, 0.2, 1);
                }
            }

            &.mud-drawer--closed {
                box-shadow: none;
                left: calc(-1 * var(--mud-drawer-width, var(--mud-drawer-width-left)));

                &:not(.mud-drawer--initial) {
                    animation: mud-drawer-slide-out-left 225ms cubic-bezier(0, 0, 0.2, 1);
                }
            }
        }

        &.mud-drawer-pos-right {
            left: auto;
            width: var(--mud-drawer-width, var(--mud-drawer-width-right));

            &.mud-drawer--open {
                right: 0;

                &:not(.mud-drawer--initial) {
                    animation: mud-drawer-slide-in-right 225ms cubic-bezier(0, 0, 0.2, 1);
                }
            }

            &.mud-drawer--closed {
                box-shadow: none;
                right: calc(-1 * var(--mud-drawer-width, var(--mud-drawer-width-right)));

                &:not(.mud-drawer--initial) {
                    animation: mud-drawer-slide-out-right 225ms cubic-bezier(0, 0, 0.2, 1);
                }
            }
        }
    }

    &.mud-drawer-mini {
        height: 100%;
        transition: width 225ms cubic-bezier(0, 0, 0.2, 1);

        &.mud-drawer-pos-left {
            left: 0;
            right: auto;

            &.mud-drawer--closed {
                width: var(--mud-drawer-width-mini-left);
            }

            &.mud-drawer--open {
                width: var(--mud-drawer-width-left);
            }
        }

        &.mud-drawer-pos-right {
            left: auto;
            right: 0;

            &.mud-drawer--closed {
                width: var(--mud-drawer-width-mini-right);
            }

            &.mud-drawer--open {
                width: var(--mud-drawer-width-right);
            }
        }
    }

    &.mud-drawer-temporary {
        margin: 0 !important;
        z-index: calc(var(--mud-zindex-appbar) + 2);
        transition: transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms;

        &.mud-drawer-pos-left {
            right: auto;
            top: 0;
            height: 100%;
            width: var(--mud-drawer-width, var(--mud-drawer-width-left));

            &.mud-drawer--open {
                left: 0;

                &:not(.mud-drawer--initial) {
                    animation: mud-drawer-slide-in-left 225ms cubic-bezier(0, 0, 0.2, 1)forwards;
                }
            }

            &.mud-drawer--closed {
                left: calc(-1 * var(--mud-drawer-width, var(--mud-drawer-width-left)));

                &:not(.mud-drawer--initial) {
                    animation: mud-drawer-slide-out-left 225ms cubic-bezier(0, 0, 0.2, 1)forwards;
                }
            }
        }

        &.mud-drawer-pos-right {
            left: auto;
            top: 0;
            height: 100%;
            width: var(--mud-drawer-width, var(--mud-drawer-width-right));

            &.mud-drawer--open {
                right: 0;

                &:not(.mud-drawer--initial) {
                    animation: mud-drawer-slide-in-right 225ms cubic-bezier(0, 0, 0.2, 1)forwards;
                }
            }

            &.mud-drawer--closed {
                right: calc(-1 * var(--mud-drawer-width, var(--mud-drawer-width-right)));

                &:not(.mud-drawer--initial) {
                    animation: mud-drawer-slide-out-right 225ms cubic-bezier(0, 0, 0.2, 1)forwards;
                }
            }
        }

        &.mud-drawer-pos-bottom {
            left: 0;
            top: auto;
            width: 100%;

            &.mud-drawer--open {
                bottom: 0;

                &:not(.mud-drawer--initial) {
                    animation: mud-drawer-slide-in-bottom 225ms cubic-bezier(0, 0, 0.2, 1) 0ms 1;
                }
            }

            &.mud-drawer--closed {
                bottom: calc(-1 * var(--mud-drawer-content-height));

                &:not(.mud-drawer--initial) {
                    animation: mud-drawer-slide-out-bottom 225ms cubic-bezier(0, 0, 0.2, 1) 0ms 1;
                }
            }
        }

        &.mud-drawer-pos-top {
            left: 0;
            bottom: auto;
            width: 100%;

            &.mud-drawer--open {
                top: 0;

                &:not(.mud-drawer--initial) {
                    animation: mud-drawer-slide-in-top 225ms cubic-bezier(0, 0, 0.2, 1) 0ms 1;
                }
            }

            &.mud-drawer--closed {
                top: calc(-1 * var(--mud-drawer-content-height));

                &:not(.mud-drawer--initial) {
                    animation: mud-drawer-slide-out-top 225ms cubic-bezier(0, 0, 0.2, 1) 0ms 1;
                }
            }
        }
    }

    &.mud-drawer-mini.mud-drawer-pos-left ~ div:not(.mud-main-content),
    &.mud-drawer-mini.mud-drawer-pos-right ~ div:not(.mud-main-content),
    &.mud-drawer-persistent.mud-drawer-pos-left ~ div:not(.mud-main-content),
    &.mud-drawer-persistent.mud-drawer-pos-right ~ div:not(.mud-main-content) {
        transition: margin 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
    }

    &.mud-drawer-mini.mud-drawer-pos-left.mud-drawer--open ~ div:not(.mud-main-content),
    &.mud-drawer-persistent.mud-drawer-pos-left.mud-drawer--open ~ div:not(.mud-main-content) {
        margin-left: var(--mud-drawer-width, var(--mud-drawer-width-left));
    }

    &.mud-drawer-mini.mud-drawer-pos-right.mud-drawer--open ~ div:not(.mud-main-content),
    &.mud-drawer-persistent.mud-drawer-pos-right.mud-drawer--open ~ div:not(.mud-main-content) {
        margin-right: var(--mud-drawer-width, var(--mud-drawer-width-right));
    }

    &.mud-drawer-mini.mud-drawer-pos-left.mud-drawer--closed ~ div:not(.mud-main-content) {
        margin-left: var(--mud-drawer-width, var(--mud-drawer-width-mini-left));
    }

    &.mud-drawer-mini.mud-drawer-pos-right.mud-drawer--closed ~ div:not(.mud-main-content) {
        margin-right: var(--mud-drawer-width, var(--mud-drawer-width-mini-right));
    }
}

.mud-drawer-header {
    display: flex;
    min-height: var(--mud-appbar-height);
    padding: 12px 24px 12px 24px;

    &.mud-drawer-header-dense {
        min-height: calc(var(--mud-appbar-height) - var(--mud-appbar-height) / 4);
        padding: 8px 24px 8px 24px;
    }
}

.mud-drawer-fixed {
    &.mud-drawer-mini.mud-drawer-clipped-always,
    &.mud-drawer-persistent:not(.mud-drawer-clipped-never),
    &.mud-drawer-responsive.mud-drawer-clipped-always,
    &.mud-drawer-temporary.mud-drawer-clipped-always {
        top: var(--mud-appbar-height);
        height: calc(100% - var(--mud-appbar-height));

        @media (max-width:$breakpoint-sm - 1px) and (orientation: landscape) {
            top: calc(var(--mud-appbar-height) - var(--mud-appbar-height) / 4);
            height: calc(100% - var(--mud-appbar-height) + var(--mud-appbar-height) - var(--mud-appbar-height) / 4);
        }

        @media (max-width:$breakpoint-sm - 1px) and (orientation: portrait) {
            top: calc(var(--mud-appbar-height) - var(--mud-appbar-height) / 8);
            height: calc(100% - var(--mud-appbar-height) + var(--mud-appbar-height) - var(--mud-appbar-height) / 8);
        }
    }

    @each $breakpoint in map-keys($breakpoints) {
        &.mud-drawer-mini.mud-drawer-clipped-docked.mud-drawer-#{$breakpoint},
        &.mud-drawer-responsive.mud-drawer-clipped-docked.mud-drawer-#{$breakpoint} {
            @media (min-width: map-get($breakpoints, $breakpoint)) {
                top: var(--mud-appbar-height);
                height: calc(100% - var(--mud-appbar-height));

                @media (max-width:$breakpoint-sm - 1px) and (orientation: landscape) {
                    top: calc(var(--mud-appbar-height) - var(--mud-appbar-height) - var(--mud-appbar-height) / 4);
                    height: calc(100% - var(--mud-appbar-height) + var(--mud-appbar-height) - var(--mud-appbar-height) / 4);
                }

                @media (max-width:$breakpoint-sm - 1px) and (orientation: portrait) {
                    top: calc(var(--mud-appbar-height) - var(--mud-appbar-height) / 8);
                    height: calc(100% - var(--mud-appbar-height) / 8);
                }
            }
        }
    }
}

.mud-appbar-dense ~ .mud-drawer-fixed {
    &.mud-drawer-mini:not(.mud-drawer-clipped-never),
    &.mud-drawer-persistent:not(.mud-drawer-clipped-never),
    &.mud-drawer-responsive.mud-drawer-clipped-always,
    &.mud-drawer-temporary.mud-drawer-clipped-always {
        top: calc(var(--mud-appbar-height) - var(--mud-appbar-height) / 4);
        height: calc(100% - var(--mud-appbar-height) + var(--mud-appbar-height) / 4);
    }

    @each $breakpoint in map-keys($breakpoints) {
        @media (min-width: map-get($breakpoints, $breakpoint)) {
            &.mud-drawer-responsive.mud-drawer-clipped-docked.mud-drawer-#{$breakpoint} {
                top: calc(var(--mud-appbar-height) - var(--mud-appbar-height) / 4);
                height: calc(100% - var(--mud-appbar-height) + var(--mud-appbar-height) / 4);
            }
        }
    }
}

.mud-drawer-overlay {
    display: none;

    &.mud-drawer-overlay--open {
        @each $breakpoint in map-keys($breakpoints) {
            &.mud-drawer-overlay-responsive.mud-drawer-overlay-#{$breakpoint} {
                @media (max-width: map-get($breakpoints, $breakpoint) - 1px) {
                    display: block;

                    &.mud-drawer--initial {
                        display: none;
                    }
                }
            }

            &.mud-drawer-overlay-mini.mud-drawer-overlay-#{$breakpoint} {
                @media (max-width: map-get($breakpoints, $breakpoint) - 1px) {
                    display: block;
                }
            }
        }

        &.mud-drawer-overlay-temporary {
            display: block;
        }
    }
}

/*#region keyframes*/
@keyframes mud-drawer-slide-in-left {
    from {
        left: calc(-1 * var(--mud-drawer-width, var(--mud-drawer-width-left)));
    }
}

@keyframes mud-drawer-slide-out-left {
    from {
        left: 0;
    }
}

@keyframes mud-drawer-slide-in-right {
    from {
        right: calc(-1 * var(--mud-drawer-width, var(--mud-drawer-width-right)));
    }
}

@keyframes mud-drawer-slide-out-right {
    from {
        right: 0;
    }
}

@keyframes mud-drawer-slide-in-bottom {
    from {
        bottom: calc(-1 * var(--mud-drawer-content-height));
    }
}

@keyframes mud-drawer-slide-out-bottom {
    from {
        bottom: 0;
    }
}

@keyframes mud-drawer-slide-in-top {
    from {
        top: calc(-1 * var(--mud-drawer-content-height));
    }
}

@keyframes mud-drawer-slide-out-top {
    from {
        top: 0;
    }
}
/*#endregion*/