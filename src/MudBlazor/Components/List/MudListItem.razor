@namespace MudBlazor
@typeparam T
@inherits MudComponentBase

<div tabindex="0" @attributes="UserAttributes" id="@ItemId" class="@Classname" @onclick="@((MudList?.Clickable == true || NestedList != null) ? OnClickHandler : OnlyOnClick)" @onclick:stopPropagation="true" style="@Style">


    @if (NestedList == null && MudList.MultiSelection == true && MudList.MultiSelectionAlign == Align.Start && 
        (OverrideMultiSelectionComponent != MultiSelectionComponent.None || (MudList.MultiSelectionComponent == MultiSelectionComponent.None && (OverrideMultiSelectionComponent != null || OverrideMultiSelectionComponent != MultiSelectionComponent.None))))
    {
        <div class="@MultiSelectClassName">
            @if (OverrideMultiSelectionComponent == null ? MudList?.MultiSelectionComponent == MultiSelectionComponent.CheckBox : OverrideMultiSelectionComponent.Value == MultiSelectionComponent.CheckBox)
            {
                <MudCheckBox Color="@MudList.Color" Disabled="@Disabled" @bind-Checked="_selected" @onclick="OnClickHandler" Dense="true" />
            }
            else if (MudList?.MultiSelectionComponent == MultiSelectionComponent.Switch)
            {
                <MudSwitch Color="@MudList.Color" Disabled="@Disabled" @bind-Checked="_selected" @onclick="OnClickHandler" />
            }
            
        </div>
    }

    @if (!string.IsNullOrWhiteSpace(Avatar))
    {
        <div class="mud-list-item-avatar">
            <MudAvatar Class="@AvatarClass">
                <MudIcon Icon="@Avatar" Color="@IconColor" Size="@IconSize" />
            </MudAvatar>
        </div>
    }
    else if (!string.IsNullOrWhiteSpace(Icon))
    {
        <div class="mud-list-item-icon">
            <MudIcon Icon="@Icon" Color="@IconColor" Size="@IconSize" />
        </div>
    }
    <div class="mud-list-item-text @(Inset? "mud-list-item-text-inset" : "")">
        <MudText Typo="@_textTypo">
            @if (ChildContent != null)
            {
                @ChildContent
            }
            else
            {
                @Text
            }
        </MudText>
    </div>

    @if (NestedList == null && MudList?.MultiSelection == true && MudList?.MultiSelectionAlign == Align.End)
    {
        <div class="@MultiSelectClassName">
            @if (MudList?.MultiSelectionComponent == MultiSelectionComponent.CheckBox)
            {
                <MudCheckBox Color="@MudList.Color" Disabled="@Disabled" @bind-Checked="_selected" Dense="true" />
            }
            else if (MudList?.MultiSelectionComponent == MultiSelectionComponent.Switch)
            {
                <MudSwitch Color="@MudList.Color" Disabled="@Disabled" @bind-Checked="_selected" />
            }
        </div>
    }
    
    @if (NestedList != null)
    {
        <MudIcon Icon="@($"{(_expanded ? ExpandLessIcon : ExpandMoreIcon)}")" Size="@IconSize" Color="@AdornmentColor" />
    }
</div>

@if (NestedList != null)
{
    <CascadingValue Value="this" IsFixed="true">
        <MudCollapse Expanded="@Expanded">
            <MudList T="T" Clickable="@MudList.Clickable" Color="@MudList.Color" MultiSelection="@MudList.MultiSelection" MultiSelectionComponent="@MudList.MultiSelectionComponent" MultiSelectionAlign="@MudList.MultiSelectionAlign" DisablePadding="true" Class="mud-nested-list" Disabled="@Disabled">
                <ChildContent>
                    @NestedList
                </ChildContent>
            </MudList>
        </MudCollapse>
    </CascadingValue>
}