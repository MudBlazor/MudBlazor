@namespace MudBlazor
@inherits MudComponentBase
@typeparam T
@using MudBlazor.Utilities

<CascadingValue IsFixed="true" Value="this">@Columns</CascadingValue>

<CascadingValue IsFixed="true" Value="this">
    <div @attributes="UserAttributes" class="@_classname" style="@Style">
        @if (Items != null || ServerData != null)
        {
            @if (ToolBarContent != null)
            {
                <MudToolBar Class="mud-table-toolbar">
                    @ToolBarContent
                    @ToolbarMenu(this)           
                </MudToolBar>
            }
            else
            {
                @*Add the default toolbar.*@
                <MudToolBar Class="mud-table-toolbar">
                    <MudSpacer />
                    @ToolbarMenu(this) 
                </MudToolBar>
            }
            <div class="mud-table-container" style="@_tableStyle @(GetHorizontalScrollbarStyle())">
                <table class="mud-table-root">
                    @if (ColGroup != null)
                    {
                        <colgroup>
                            @ColGroup
                        </colgroup>
                    }
                    <thead class="@_headClassname">
                        <CascadingValue Name="IsOnlyHeader" IsFixed="true" Value="true">
                            @Header
                        </CascadingValue>
                        <tr class="mud-table-row">
                            @foreach (var column in _columns)
                            {
                                @*This is necessary on .net6.0-preview4 and below.*@
                                if (column.HeaderTemplate != null)
                                {
                                    <HeaderCell T="T" Column="@column" Title="@column.Title" Field="@column.Field" Class="@column.headerClassname"
                                        SortIcon="@column.SortIcon" SortBy="@column.SortBy" HeaderTemplate="@column.HeaderTemplate"
                                        InitialDirection="@column.InitialDirection" Sortable="@column.Sortable" Style="@column.HeaderStyle"
                                        Filterable="@column.Filterable" ColumnType="@column.Type" ColSpan="@column.HeaderColSpan"
                                        Hideable="@column.Hideable" @bind-Hidden="column.Hidden" Groupable="@column.groupable" Grouping="@column.grouping"></HeaderCell>
                                }
                                else
                                {
                                    <HeaderCell T="T" Column="@column" Title="@column.Title" Field="@column.Field" Class="@column.headerClassname"
                                        SortIcon="@column.SortIcon" SortBy="@column.SortBy"
                                        InitialDirection="@column.InitialDirection" Sortable="@column.Sortable" Style="@column.HeaderStyle"
                                        Filterable="@column.Filterable" ColumnType="@column.Type" ColSpan="@column.HeaderColSpan"
                                        Hideable="@column.Hideable" @bind-Hidden="column.Hidden" Groupable="@column.groupable" Grouping="@column.grouping"></HeaderCell>
                                }
                            }

                            @if (EditMode == DataGridEditMode.Inline)
                            {
                                @*Add the column header for the edit controls.*@
                                <th scope="col" class="mud-table-cell"></th>
                            }
                        </tr>
                        @if (_filtersMenuVisible)
                        {
                            <MudOverlay  Visible="true" OnClick="@(() => _filtersMenuVisible = false)"></MudOverlay>
                            <MudPaper Class="pa-2 filters-panel" Style="position:absolute;width:auto;min-width:700px;z-index:var(--mud-zindex-drawer)" Elevation="4">
                                <MudGrid Spacing="0">
                                    @foreach (var f in FilterDefinitions)
                                    { 
                                        <Filter T="T" @bind-Field="f.Field" @bind-Operator="f.Operator" @bind-Value="f.Value"
                                            Id="@f.Id"></Filter>
                                    }
                                </MudGrid>
                                <MudButton Class="mt-2" StartIcon="@Icons.Material.Filled.Add" OnClick="@AddFilter" Color="@Color.Primary">Add Filter</MudButton>
                            </MudPaper>
                        }
                        @if (_columnsPanelVisible)
                        {
                            <MudOverlay  Visible="true" OnClick="@(() => _columnsPanelVisible = false)"></MudOverlay>
                            <MudPaper Class="pa-2 columns-panel" Style="position:absolute;max-width:450px;z-index:var(--mud-zindex-drawer)" Elevation="4">
                                <MudGrid Spacing="0">
                                    @foreach (var column in _columns)
                                    {
                                        <MudItem xs="12">
                                            <MudSwitch T="bool" Disabled="@(!(column.Hideable ?? false))" @bind-Checked="column.Hidden" Converter="_oppositeBoolConverter" Color="Color.Primary" Label="@(column.Title ?? @column.Field)" />
                                        </MudItem>
                                    }
                                    <MudItem xs="6">
                                        <MudButton OnClick="@HideAllColumns" Color="@Color.Primary">Hide All</MudButton>
                                    </MudItem>
                                    <MudItem xs="6" Class="d-flex justify-end">
                                        <MudButton OnClick="@ShowAllColumns" Color="@Color.Primary">Show All</MudButton>
                                    </MudItem>
                                </MudGrid>
                                
                            </MudPaper>
                        }
                    </thead>
                    <tbody class="mud-table-body">
                        @if (Loading)
                        {
                            <tr>
                                <td colspan="1000" class="mud-table-loading">
                                    <MudProgressLinear Color="@LoadingProgressColor" Class="mud-table-loading-progress" Indeterminate="true" />
                                </td>
                            </tr>
                        }

                        @if (CurrentPageItems != null && CurrentPageItems.Count() > 0)
                        {
                            @if (GroupedColumn != null)
                            {
                                foreach (var g in _groups)
                                {
                                    <tr class="mud-table-row">
                                        <td class="mud-table-cell @GroupClass" colspan="1000" style="background-color:var(--mud-palette-background-grey);@GroupStyle">
                                            <MudIconButton 
                                                Class="mud-table-row-expander" 
                                                Icon="@(g.IsExpanded ? Icons.Material.Filled.ExpandMore : Icons.Material.Filled.ChevronRight)" 
                                                OnClick="@(() => ToggleGroupExpansion(g))" />

                                            @if (GroupedColumn.GroupTemplate == null)
                                            {
                                                <span style="font-weight:bold">@GroupedColumn.computedTitle: @g.Grouping.Key</span>
                                            }
                                            else
                                            {
                                                @GroupedColumn.GroupTemplate(@g)
                                            }
                                        </td>
                                    </tr>
                                    var rowIndex = 0;

                                    @if (g.IsExpanded)
                                    {
                                        <MudVirtualize IsEnabled="@Virtualize" Items="@g.Grouping.ToList()" Context="item">
                                            @{ var rowClass = new CssBuilder(RowClass).AddClass(RowClassFunc?.Invoke(item, rowIndex)).Build(); }
                                            @{ var rowStyle = new StyleBuilder().AddStyle(RowStyle).AddStyle(RowStyleFunc?.Invoke(item, rowIndex)).Build(); }
                                            @{ var tmpRowIndex = rowIndex; }
                                            <tr class="mud-table-row @rowClass" Style="@rowStyle" @key="item" @onclick="@((args) => OnRowClickedAsync(args, item, tmpRowIndex))">  
                                                <CascadingValue Value="@Validator" IsFixed="true">
                                                @foreach (var column in @_columns)
                                                {
                                                    if (!column.Hidden)
                                                    {
                                                        <Cell Item="@item" Title="@column.Title" Field="@column.Field" Class="@column.cellClassname"
                                                            CellTemplate="@column.CellTemplate" ColumnType="@column.Type" Style="@column.CellStyle"
                                                            IsEditable="@(column.IsEditable ?? true)" EditTemplate="@column.EditTemplate"
                                                            CellClass="@column.CellClass" CellClassFunc="@column.CellClassFunc"
                                                            CellStyle="@column.CellStyle" CellStyleFunc="@column.CellStyleFunc"></Cell>
                                                    }
                                                }
                                        
                                                @if (EditMode == DataGridEditMode.Inline)
                                                {
                                                    @*Add the inline edit controls.*@
                                                    <Cell Item="@item" ColumnType="@ColumnType.InlineEditCommand" IsEditable="false"></Cell>
                                                }
                                                </CascadingValue>
                                            </tr>                                   
                                            @if (ChildRowContent != null)
                                            {
                                                @ChildRowContent(item)
                                            }                                    
                                            @{ rowIndex++; }
                                        </MudVirtualize>
                                    }
                                }
                            }
                            else
                            {
                                var rowIndex = 0;
                                <MudVirtualize IsEnabled="@Virtualize" Items="@CurrentPageItems?.ToList()" Context="item">
                                    @{ var rowClass = new CssBuilder(RowClass).AddClass(RowClassFunc?.Invoke(item, rowIndex)).Build(); }
                                    @{ var rowStyle = new StyleBuilder().AddStyle(RowStyle).AddStyle(RowStyleFunc?.Invoke(item, rowIndex)).Build(); }
                                    @{ var tmpRowIndex = rowIndex; }
                                    <tr class="mud-table-row @rowClass" Style="@rowStyle" @key="item" @onclick="@((args) => OnRowClickedAsync(args, item, tmpRowIndex))">  
                                        <CascadingValue Value="@Validator" IsFixed="true">
                                        @foreach (var column in @_columns)
                                        {
                                            if (column.grouping)
                                            {
                                            
                                            }
                                            else if (!column.Hidden)
                                            {
                                                <Cell Item="@item" Title="@column.Title" Field="@column.Field" Class="@column.cellClassname"
                                                    CellTemplate="@column.CellTemplate" ColumnType="@column.Type" Style="@column.CellStyle"
                                                    IsEditable="@(column.IsEditable ?? true)" EditTemplate="@column.EditTemplate"
                                                    CellClass="@column.CellClass" CellClassFunc="@column.CellClassFunc"
                                                    CellStyle="@column.CellStyle" CellStyleFunc="@column.CellStyleFunc"></Cell>
                                            }
                                        }
                                        
                                        @if (EditMode == DataGridEditMode.Inline)
                                        {
                                            @*Add the inline edit controls.*@
                                            <Cell Item="@item" ColumnType="@ColumnType.InlineEditCommand" IsEditable="false"></Cell>
                                        }
                                        </CascadingValue>
                                    </tr>                                   
                                    @if (ChildRowContent != null)
                                    {
                                        @ChildRowContent(item)
                                    }                                    
                                    @{ rowIndex++; }
                                </MudVirtualize>
                            }
                        }
                        else if(Loading ? LoadingContent != null : NoRecordsContent != null)
                        {
                            <tr>
                                <th colspan="1000" class="mud-table-empty-row">
                                    <div Class="my-3">
                                        @if(Loading)
                                        {
                                            @LoadingContent
                                        }
                                        else
                                        {
                                            @NoRecordsContent
                                        }
                                    </div>
                                </th>
                            </tr>
                        }
                    </tbody>
                    <tfoot class="@_footClassname">
                        <CascadingValue Name="IsOnlyFooter" IsFixed="true" Value="true">
                            @Footer
                        </CascadingValue>
                        <tr class="mud-table-row">
                            @foreach (var column in @_columns)
                            {
                                if (column.Type == ColumnType.SelectionCheckBox && MultiSelection && column.EnableFooterSelection)
                                {
                                    <FooterCell T="T" Class="@column.footerClassname" ColumnType="@ColumnType.SelectionCheckBox" ColSpan="@column.FooterColSpan"
                                        Style="@column.FooterStyle"></FooterCell>
                                }
                                else if (column.Type != ColumnType.SelectionCheckBox && column.FooterTemplate != null)
                                {
                                    <FooterCell T="T" Class="@column.footerClassname" ColumnType="@column.Type" FooterTemplate="@column.FooterTemplate"
                                        ColSpan="@column.FooterColSpan" Style="@column.FooterStyle"></FooterCell>
                                }
                            }
                        </tr>
                    </tfoot>
                </table>
            </div>
            @if (PagerContent != null)
            {
                <div class="mud-table-pagination">
                    @PagerContent
                </div>
            }
        }
    </div>
</CascadingValue>

@code {
    internal RenderFragment ToolbarMenu(MudDataGrid<T> __this)
    {
        return
        @<text>
        <MudMenu Icon="@Icons.Material.Outlined.Settings" Size="Size.Small" Direction="Direction.Bottom" OffsetY="true" Dense="true">
            <MudMenuItem OnClick="@__this.ShowColumnsPanel">Columns</MudMenuItem>
            @if (__this.Groupable)
            {
                <MudMenuItem OnClick="@__this.ExpandAllGroups">Expand All Groups</MudMenuItem>
                <MudMenuItem OnClick="@__this.CollapseAllGroups">Collapse All Groups</MudMenuItem>
            }
        </MudMenu>
        </text>;
    }
}