@namespace MudBlazor
@inherits MudComponentBase
@typeparam T

<th scope="col" class="@_classname" style="@_style" colspan="@Column?.HeaderColSpan" @attributes="@UserAttributes">
    @if (null != Column && Column.filterable)
    {
        @if (Column.FilterTemplate != null)
        {
            @Column.FilterTemplate(Column.filterContext) 
        }
        else
        {
            <MudStack Row="true">
                @if (dataType == typeof(string) && !(_operator ?? "").EndsWith("empty"))
                {
                    <MudTextField T="string" Value="@_valueString" ValueChanged="@StringValueChanged" FullWidth="true" Placeholder="Filter value" Margin="@Margin.Dense" Immediate="true" />
                }
                else if (isNumber && !(_operator ?? "").EndsWith("empty"))
                {
                    <MudNumericField T="double?" Value="@_valueNumber" ValueChanged="@NumberValueChanged" FullWidth="true" Placeholder="Filter value" Margin="@Margin.Dense" Immediate="true"></MudNumericField>
                }
                else if (isEnum)
                {
                    <MudSelect T="Enum" Value="@_valueEnum" ValueChanged="@EnumValueChanged" FullWidth="true" Dense="true" Margin="@Margin.Dense">
                        <MudSelectItem T="Enum" Value="@(null)"></MudSelectItem>
                        @foreach (var item in Enum.GetValues(dataType))
                        {
                            <MudSelectItem T="Enum" Value="@((Enum)item)">@item</MudSelectItem>
                        }
                    </MudSelect>
                }
                else if (dataType == typeof(bool))
                {
                    <MudSelect T="bool?" Value="@_valueBool" ValueChanged="@BoolValueChanged" FullWidth="true" Dense="true" Margin="@Margin.Dense">
                        <MudSelectItem T="bool?" Value="@(null)"></MudSelectItem>
                        <MudSelectItem T="bool?" Value="@(true)">true</MudSelectItem>
                        <MudSelectItem T="bool?" Value="@(false)">false</MudSelectItem>
                    </MudSelect>
                }
                else if (dataType == typeof(DateTime) && !(_operator ?? "").EndsWith("empty"))
                {
                    <MudGrid Spacing="0">
                        <MudItem xs="7">
                            <MudDatePicker Date="@_valueDate" DateChanged="@DateValueChanged" Margin="@Margin.Dense" />
                        </MudItem>
                        <MudItem xs="5">
                            <MudTimePicker Time="@_valueTime" TimeChanged="@TimeValueChanged" Margin="@Margin.Dense" />
                        </MudItem>
                    </MudGrid>
                }
                <MudMenu Icon="@Icons.Material.Filled.FilterAlt" Size="@Size.Small" Dense="true">
                    @foreach (var o in operators)
                    {
                        if (!string.IsNullOrWhiteSpace(o))
                        {
                            <MudMenuItem Style="@chosenOperatorStyle(o)" OnClick="@(() => ChangeOperator(o))">@o</MudMenuItem>
                        }
                    }
                </MudMenu>
                <MudIconButton Class="align-self-center" Icon="@Icons.Material.Filled.FilterAltOff" Size="@Size.Small" OnClick="@ClearFilter"></MudIconButton>
            </MudStack>
        }
    }
</th>
