@namespace MudBlazor
@inherits MudComponentBase
@typeparam T

<TemplateColumn T="T" Tag="@("hierarchy-column")" Sortable="false" Resizable="false" ShowColumnOptions="false" HeaderStyle="width:0%"
    Filterable="false" Editable="false" DragAndDropEnabled="@DragAndDropEnabled">
    <CellTemplate>
        @{
            var isOpen = context.OpenHierarchies.Contains(context.Item);
            var isDisabled = ButtonDisabledFunc.Invoke(context.Item);

            if (!(isDisabled && HideDisabledIcons))
            {
                <MudIconButton
                    Class="ma-n3 pa-1"
                    Color="@(isOpen ? OpenIconColor : ClosedIconColor)"
                    Icon="@(isOpen ? OpenIcon : ClosedIcon)"
                    OnClick="@context.Actions.ToggleHierarchyVisibilityForItemAsync"
                    Size="@((isOpen ? OpenIconSize : ClosedIconSize) ?? IconSize)"
                    Disabled="@isDisabled"
                    Variant="@(isOpen ? OpenIconVariant : ClosedIconVariant)"/>
            }
        }
    </CellTemplate>
</TemplateColumn>

@code {
    /// <summary>
    /// The icon shown when a row is collapsed.
    /// </summary>
    [Parameter] public string ClosedIcon { get; set; } = Icons.Material.Filled.ChevronRight;

    /// <summary>
    /// The icon shown when a row is expanded.
    /// </summary>
    [Parameter] public string OpenIcon { get; set; } = Icons.Material.Filled.ExpandMore;

    /// <summary>
    /// The color of the icon button shown when a row is collapsed.
    /// </summary>
    [Parameter] public Color ClosedIconColor { get; set; } = Color.Default;

    /// <summary>
    /// The color of the icon button shown when a row is expanded.
    /// </summary>
    [Parameter] public Color OpenIconColor { get; set; } = Color.Default;

    /// <summary>
    /// The size of both of the icon buttons shown when a row is expanded or collapsed. Overridden by
    /// <see cref="ClosedIconSize" /> and <see cref="OpenIconSize" /> if either is provided. />
    /// </summary>
    [Parameter] public Size IconSize { get; set; } = Size.Medium;

    /// <summary>
    /// The size of the icon button shown when a row is collapsed.
    /// </summary>
    [Parameter] public Size? ClosedIconSize { get; set; }

    /// <summary>
    /// The size of the icon button shown when a row is expanded.
    /// </summary>
    [Parameter] public Size? OpenIconSize { get; set; }

    /// <summary>
    /// The variant of the icon button shown when a row is collapsed.
    /// </summary>
    [Parameter] public Variant ClosedIconVariant { get; set; } = Variant.Text;

    /// <summary>
    /// The variant of the icon button shown when a row is expanded.
    /// </summary>
    [Parameter] public Variant OpenIconVariant { get; set; } = Variant.Text;

    /// <summary>
    /// Function that determines whether the expand/collapse icon button is disabled.
    /// </summary>
    [Parameter] public Func<T, bool> ButtonDisabledFunc { get; set; } = _ => false;

    /// <summary>
    /// When true, the expand/collapse icon button is omitted entirely when it is disabled (i.e. whenever
    /// <see cref="ButtonDisabledFunc" /> returns true) instead of showing it as a visible but disabled component.
    /// </summary>
    [Parameter] public bool HideDisabledIcons { get; set; }
}
