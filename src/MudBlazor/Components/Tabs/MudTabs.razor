@namespace MudBlazor
@inherits MudComponentBase


<div class="@TabsClassnames">
    <CascadingValue Value="this" IsFixed="true">
        <div class="@ToolbarClassnames">
            <div class="mud-tabs-toolbar-inner">
                <div class="mud-tabs-toolbar-content">
                    <div class="@WrapperClassnames">
                        @foreach (MudTabPanel panel in Panels)
                        {
                            <MudTooltip Placement="@GetTooltipPlacement()" Text="@panel.ToolTip">
                                <div class="@GetTabClass(panel)" @onclick=@( e => ActivatePanel(panel, e) )>
                                    @if (!String.IsNullOrEmpty(panel.Text) && String.IsNullOrEmpty(panel.Icon))
                                    {
                                        @panel.Text
                                    }
                                    else if (String.IsNullOrEmpty(panel.Text) && !String.IsNullOrEmpty(panel.Icon))
                                    {
                                        <MudIcon Icon="@panel.Icon" />
                                    }
                                    else if (!String.IsNullOrEmpty(panel.Text) && !String.IsNullOrEmpty(panel.Icon))
                                    {
                                        <MudIcon Icon="@panel.Icon" Class="mud-tab-icon-text" />
                                        @panel.Text
                                    }
                                    @if (panel.BadgeData != null)
                                    {
                                        <MudBadge Content="@panel.BadgeData" Color="@panel.BadgeColor" Class="mud-tab-badge" />
                                    }
                                </div>
                            </MudTooltip>
                        }
                        @if (!Vertical)
                        {
                            <div class="mud-tab-slider mud-tab-slider-horizontal @(TabsPlacement == Placement.Bottom ? "mud-tab-slider-horizontal-reverse" : "")" style="width: calc(100% / @Panels.Count()); left: calc((100% / @Panels.Count()) * @ActivePanelIndex);"></div>
                        }
                        else
                        {
                            <div class="mud-tab-slider mud-tab-slider-vertical @(TabsPlacement == Placement.End ? "mud-tab-slider-vertical-reverse" : "")" style="height: calc(100% / @Panels.Count()); top: calc((100% / @Panels.Count()) * @ActivePanelIndex);"></div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="@PanelsClassnames">
            @ChildContent
        </div>
    </CascadingValue>
</div>


