@namespace MudBlazor
@inherits MudTableBase
@using MudBlazor.Utilities
@typeparam T

@(ClearFilterCache()) @*Clear filtered items cache for this render*@

<div @attributes="UserAttributes" class="@Classname" style="@Style">
@if (Items != null || ServerData != null)
{
    <CascadingValue Value="TableContext" IsFixed="true">
        @if (ToolBarContent != null)
        {
            <MudToolBar Class="mud-table-toolbar">
                @ToolBarContent
            </MudToolBar>
        }
        @if (Context.SortLabels.Any())
        {
            <div Class="mud-table-smalldevices-sortselect">
                <CascadingValue Name="SubscribeToParentForm" Value="false" IsFixed>
                    <MudSelect Value="@Context.CurrentSortLabel" Label="@SortLabel" ValueChanged="@(v => Context.SetSortFunc(v, overrideDirectionNone: true))" T="MudTableSortLabel<T>">
                        @foreach (var label in Context.SortLabels)
                        {
                            <MudSelectItem Value="@label">@label.ChildContent</MudSelectItem>
                        }
                    </MudSelect>
                </CascadingValue>
            </div>
        }
        <div class="mud-table-container @TableContainerClass" style="@TableContainerStyle @(GetHorizontalScrollbarStyle())">
            <table class="mud-table-root">
                @if (ColGroup != null)
                {
                    <colgroup>
                        @ColGroup
                    </colgroup>
                }
                @if (HeaderContent != null || Columns != null)
                {
                    <thead class="@HeadClassname">
                        @if (CustomHeader)
                        {
                            @HeaderContent
                        }
                        else
                        {
                            <MudTHeadRow Checkable="MultiSelection" SelectionChangeable="SelectionChangeable" Expandable="@(GroupBy?.Expandable ?? false)">
                                @if (HeaderContent != null)
                                {
                                    @HeaderContent
                                }
                                
                                @if (Columns != null)
                                {
                                    @Columns(Def)
                                }
                            </MudTHeadRow>
                        }
                        @if (Loading)
                        {
                            <tr class="mud-table-row">
                                <th colspan="1000" class="@(CurrentPageItems.Any() || LoadingContent is not null ? "mud-table-loading" : "")">
                                    <MudProgressLinear Color="@LoadingProgressColor" Class="mud-table-loading-progress" Indeterminate="true" />
                                </th>
                            </tr>
                        }
                    </thead>
                }
                else if (Loading)
                {
                    <thead class="@HeadClassname">
                        <tr class="mud-table-row">
                            <th colspan="1000" class="@(CurrentPageItems.Any() || LoadingContent is not null ? "mud-table-loading" : "")">
                                <MudProgressLinear Color="@LoadingProgressColor" Class="mud-table-loading-progress" Indeterminate="true" />
                            </th>
                        </tr>
                    </thead>
                }
                <tbody class="mud-table-body">
                    @if(GroupBy != null)
                    {
                        @foreach (var group in GroupItemsPage)
                        {
                            <MudTableGroupRow GroupDefinition="GroupBy" Items="group" Checkable="MultiSelection" SelectionChangeable="SelectionChangeable"
                                              HeaderClass="@GroupHeaderClass" HeaderStyle="@GroupHeaderStyle" 
                                              FooterClass="@GroupFooterClass" FooterStyle="@GroupFooterStyle"
                                              HeaderTemplate="@GroupHeaderTemplate" FooterTemplate="@GroupFooterTemplate" T="T"  />
                        }
                    }
                    else
                    {
                        @if (CurrentPageItems != null && CurrentPageItems.Any())
                        {
                            var rowIndex = 0;
                                <MudVirtualize Enabled="@Virtualize" Items="@CurrentPageItems?.ToList()" OverscanCount="@OverscanCount" ItemSize="@ItemSize" Context="item">
                               @{ var rowClass = new CssBuilder(RowClass).AddClass(RowClassFunc?.Invoke(item, rowIndex)).Build(); }
                               @{ var rowStyle = new StyleBuilder().AddStyle(RowStyle).AddStyle(RowStyleFunc?.Invoke(item, rowIndex)).Build(); }
                               <MudTr Class="@rowClass" Style="@rowStyle" Item="item" @key="item"
                                      Checkable="MultiSelection" SelectionChangeable="SelectionChangeable" Editable="IsItemEditable(item)"
                                      Checked="@(IsCheckedRow(item))"
                                      CheckedChanged="((value) => { var x = item; OnRowCheckboxChanged(value, x); })">

                                   @if ((!ReadOnly) && Editable && Equals(_editingItem, item))
                                   {
                                        <CascadingValue Value="@Validator" IsFixed="true">
                                           @if(RowEditingTemplate != null)
										    {
											    @RowEditingTemplate(item)
										    }
										    @if (Columns != null)
										    {
                                                @Columns(item)
										    }
                                        </CascadingValue>
                                   }
                                   else
                                   {
                                       if (RowTemplate != null)
										{
											@RowTemplate(item)
										}
										@if (Columns != null)
										{
                                            @Columns(item)
										}
                                   }
                               </MudTr>
                               @if (ChildRowContent != null)
                               {
                                   @ChildRowContent(item)
                               }   
                               @{ rowIndex++; }
                            </MudVirtualize>
                        }
                    }
                    @if(!(CurrentPageItems is not null && CurrentPageItems.Any())
                        && (Loading ? LoadingContent != null : NoRecordsContent != null)
                    )
                    {
                        <tr>
                            <th colspan="1000" class="mud-table-empty-row">
                                <div Class="my-3">
                                    @if(Loading)
                                    {
                                        @LoadingContent
                                    }
                                    else
                                    {
                                        @NoRecordsContent
                                    }
                                </div>
                            </th>
                        </tr>
                    }
                </tbody>
                @if (FooterContent != null || Columns != null)
                {
                    <tfoot class="@FootClassname">
                        @if (CustomFooter)
                        {
                            @FooterContent
                        }
                        else
                        {
                            <MudTFootRow Checkable="MultiSelection" SelectionChangeable="SelectionChangeable" Expandable="@(GroupBy?.Expandable ?? false)">
                                @if (FooterContent != null)
                                {
                                    @FooterContent
                                }
                                @if (Columns != null)
                                {
                                        @Columns(Def)
                                }
                            </MudTFootRow>
                        }
                    </tfoot>
                }
            </table>
        </div>
        @if (PagerContent != null)
        {
            <div class="mud-table-pagination">
                @PagerContent
            </div>
        }
    </CascadingValue>
}
</div>
@code
{
    // moved to code to avoid repeatedly code on markup block
    internal RenderFragment RenderRows(IEnumerable<T> source, string customClass = null, bool expandable = false)
    {
        var rowIndex = 0;

         RenderFragment rootNode =
            @<text>
        <MudVirtualize Enabled="@Virtualize" Items="@source?.ToList()" OverscanCount="@OverscanCount" ItemSize="@ItemSize" Context="item" ChildContent="@child()">
        </MudVirtualize>
            </text>;

         RenderFragment<T> child() => item =>
             @<text>
             @{
                var rowClass = new CssBuilder(RowClass).AddClass(RowClassFunc?.Invoke(item, rowIndex)).AddClass(customClass, !string.IsNullOrEmpty(customClass)).Build();
                var rowStyle = new StyleBuilder().AddStyle(RowStyle).AddStyle(RowStyleFunc?.Invoke(item, rowIndex)).Build();
             } 
             <MudTr Class="@rowClass" Style="@rowStyle" Item="item" @key="item" Checkable="MultiSelection" SelectionChangeable="SelectionChangeable" Editable="IsItemEditable(item)" Expandable="expandable"
                    Checked="Context.Selection.Contains(item)" CheckedChanged="((value) => { var x = item; OnRowCheckboxChanged(value, x); })">
                    @if ((!ReadOnly) && Editable && Equals(_editingItem, item))
                    {
                        <CascadingValue Value="@Validator" IsFixed="true">
                            @if(RowEditingTemplate != null)
							{
								@RowEditingTemplate(item)
							}
							@if (Columns != null)
							{
                                @Columns(item)
							}
                        </CascadingValue>
                    }
                    else
                    {
                        if (RowTemplate != null)
						{
							@RowTemplate(item)
						}
						@if (Columns != null)
						{
                            @Columns(item)
						}
                    }
                </MudTr>
                @if (ChildRowContent != null)
                {
                    @ChildRowContent(item)
                }
                @{rowIndex++;}
        </text>
    ;


        return rootNode;
    }
}