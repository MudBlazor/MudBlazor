@using MudBlazor.Internal
@namespace MudBlazor
@inherits MudComponentBase


@code 
{

    protected virtual RenderFragment InputContent => @<MudTextField Label="@Label" @bind-Text="@Text" HelperText="@HelperText" Variant="@InputVariant" ReadOnly="@(!Editable)" T="string" Style="@Style"
                                  @onclick="(() => { if (!Editable) ToggleState(); })" OnAdornmentClick="ToggleState" Disabled="@Disabled" Adornment="@Adornment"
                                  AdornmentIcon="@InputIcon" IconSize="@IconSize"/>;

    protected virtual RenderFragment DropdownContent => null;

    protected virtual RenderFragment Render => @<Node>
        <div class="@PickerClass">
            @if (PickerVariant != PickerVariant.Static)
            {
               @InputContent
            }
            <CascadingValue Value="@this" IsFixed="true">
               @if (IsOpen && PickerVariant == PickerVariant.Inline)
               {
                   <div @ref="_pickerInlineRef" class="@PickerInlineClass">
                       <MudPaper @attributes="UserAttributes" Class="@PickerPaperClass" Elevation="@_pickerElevation" Square="@_pickerSquare">
                           <div class="@PickerContainerClass">
                               @DropdownContent
                           </div>
                       </MudPaper>
                   </div>
               }
               else if (PickerVariant == PickerVariant.Static)
               {
                   <MudPaper @attributes="UserAttributes" Class="@PickerPaperClass" Elevation="@_pickerElevation" Square="@_pickerSquare">
                       <div class="@PickerContainerClass">
                           @DropdownContent
                       </div>
                   </MudPaper>
               }
               else if(IsOpen && PickerVariant == PickerVariant.Dialog)
               {
                   <MudOverlay Visible="IsOpen" OnClick="Close" DarkBackground="true" Class="mud-overlay-dialog">
                       <MudPaper @attributes="UserAttributes" Class="@PickerPaperClass" Elevation="@_pickerElevation" Square="@_pickerSquare">
                           <div class="@PickerContainerClass">
                               @DropdownContent
                           </div>
                       </MudPaper>
                   </MudOverlay>
               }
            </CascadingValue>
        </div>
        @if (PickerVariant == PickerVariant.Inline)
        {
            <MudOverlay Visible="IsOpen" OnClick="Close" LockScroll="false"/>
        }
        </Node>;
}


