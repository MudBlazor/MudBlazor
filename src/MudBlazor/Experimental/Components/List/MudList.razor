@namespace MudExperimental
@typeparam T
@inherits MudComponentBase
@using MudBlazor

<div @attributes="UserAttributes" id="@_elementId" class="@Classname" style="@Stylename" tabindex="-1" @onkeydown="HandleKeyDown" @onfocusout="HandleOnFocusOut">
    <CascadingValue Value="@this" IsFixed="true">
        @if (MultiSelection && SelectAll && ParentList == null)
        {
            <MudExperimental.MudListItem T="T" IsFunctional="true" Icon="@SelectAllCheckBoxIcon" IconColor="@Color" Text="@SelectAllText" OverrideMultiSelectionComponent="MultiSelectionComponent.None" OnClick="@(() => SelectAllItems(_allSelected))" OnClickHandlerPreventDefault="true" Dense="@Dense" Class="mb-2" />
            <MudDivider />
        }
        @if (ItemCollection != null)
        {
            <MudVirtualize IsEnabled="@Virtualize" Items="ItemCollection" Context="item">
@*                @if (MudSelect != null)
                {
                    <MudSelectItem Value="@item" Text="@(MudSelect.ToStringFunc == null ? item.ToString() : MudSelect.ToStringFunc(item))" />
                }
                else
                {
                    <MudListItem Value="@item" Text="@item.ToString()" />
                }*@
                @*Upper commented block will replace after Experimental Select*@
                <MudExperimental.MudListItem Value="@item" Text="@item.ToString()" />
            </MudVirtualize>
        }
        else
        {
            @ChildContent
        }
    </CascadingValue>
</div>
