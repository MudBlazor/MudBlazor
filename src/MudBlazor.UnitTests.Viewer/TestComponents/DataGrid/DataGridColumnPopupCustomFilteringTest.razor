@namespace MudBlazor.UnitTests.TestComponents
<MudPopoverProvider></MudPopoverProvider>

<MudDataGrid Items="@_items" Filterable="true" FilterMode="@DataGridFilterMode.ColumnFilterMenu">
    <Columns>
        <Column T="Model" Field="@nameof(Model.Name)" />
        <Column T="Model" Field="@nameof(Model.Age)" />
        <Column T="Model" Field="@nameof(Model.Status)" />
        <Column T="Model" Field="@nameof(Model.Hired)">
            <FilterTemplate>
                <MudStack>
                    <MudSwitch T="bool" Color="@Color.Primary" @bind-Checked="FilterHired" Label="Show Hired"></MudSwitch>
                    <MudButton Class="align-self-end" Color="@Color.Primary" OnClick="@(() => ApplyFilter(context))">@(FilterHired ? "Filter" : "Remove Filter")</MudButton>
                </MudStack>
            </FilterTemplate>
        </Column>
        <Column T="Model" Field="@nameof(Model.HiredOn)" />
    </Columns>
</MudDataGrid>

@code {
    public record Model (string Name, int? Age, Severity? Status, bool? Hired, DateTime? HiredOn);

    private IEnumerable<Model> _items = new List<Model>()
    {
        new Model("Sam", 56, Severity.Normal, false, null), 
        new Model("Alicia", 54, Severity.Info, null, null), 
        new Model("Ira", 27, Severity.Success, true, new DateTime(2011, 1, 2)),
        new Model("John", 32, Severity.Warning, false, null)
    };

    public bool FilterHired;
    FilterDefinition<Model> _filterDefinition = new FilterDefinition<Model>
    {
        Field = nameof(Model.Hired),
        Operator = FilterOperator.Boolean.Is,
        Value = true
    };

    public void ApplyFilter(FilterContext<Model> context)
    {
        if (FilterHired)
            context.Actions.ApplyFilter(_filterDefinition);
        else
            context.Actions.ClearFilter(_filterDefinition);
    }
}
