@using MudBlazor.EnhanceChart

<MudEnhancedChart>
    <Chart>
        <MudEnhancedBarChart Id="@Guid.Parse("ed8a9a45-f109-41b9-9ff6-074ad168b932")" Margin="0" Padding="16.666666666666666666666666666667">
            <DataSets>
                <MudEnhancedBarDataSet Name="Test Data Set" IsStacked="false">
                    @foreach (var item in _series)
                    {
                        <MudEnhancedBarChartSeries @key="@item.Id" Id="@item.Id" IsEnabled="@item.IsEnabled"  Name="@item.Name" Points="@item.Points" Color="@item.Color" />
                    }
                </MudEnhancedBarDataSet>
            </DataSets>
            <YAxes>
                <MudEnhancedNumericLinearAxis  Margin="5" LabelSize="5" ShowMajorTicks="true" ShowMinorTicks="false">
                    <MajorTick>
                        <MudEnhancedTick Value="5"  />
                    </MajorTick>
                </MudEnhancedNumericLinearAxis>
            </YAxes>
            <XAxis>
                <MudEnhancedBarChartXAxis  Margin="7" Height="3" Labels="@(new String[]{ "Mo", "Tu" })" />
            </XAxis>
        </MudEnhancedBarChart>
    </Chart>
</MudEnhancedChart>

@code {

    private class SimpleDataSeries
    {
        public Guid Id { get; set; }
        public String Name { get; set; }
        public Double[] Points { get; set; }
        public String Color { get; set; }
        public Boolean IsEnabled { get; set; } = true;
    }

    private List<SimpleDataSeries> _series = new();

    protected override void OnParametersSet()
    {
        _series.Clear();

        if (ShowFirtSeries == true)
        {
            _series.Add(new SimpleDataSeries { Id = _firstSeriesId, Name = "Series 1", Color = "#123416CC", Points = new Double[] { 50.0, 150.0 } });
        }
        if(ShowSecondSeries == true)
        {
            _series.Add(new SimpleDataSeries { Id = _secondSeriesId, Name = "Series 2", Color = "#123417CC", Points = new Double[] { 150.0, 100.0 } });
        }
        if(ShowThirdSeries == true)
        {
            _series.Add(new SimpleDataSeries { Id = _thirdSeriesId, Name = "Series 3", Color = "#123418CC", Points = new Double[] { 100.0, 50.0 }, IsEnabled = ThirdSeriesIsEnabled });
        }


        base.OnParametersSet();
    }

    [Parameter] public Boolean ShowFirtSeries { get; set; } = true;
    [Parameter] public Boolean ShowSecondSeries { get; set; } = true;
    [Parameter] public Boolean ShowThirdSeries { get; set; } = true;

    [Parameter] public Boolean ThirdSeriesIsEnabled { get; set; } = true;

    private Guid _firstSeriesId = Guid.Parse("ed8a9a45-f109-41b9-9ff6-074ad1681111");
    private Guid _secondSeriesId = Guid.Parse("ed8a9a45-f109-41b9-9ff6-074ad1682222");
    private Guid _thirdSeriesId = Guid.Parse("ed8a9a45-f109-41b9-9ff6-074ad1683333");

    public void EnableThirdSeries()
    {
        ShowThirdSeries = true;
        OnParametersSet();
        InvokeAsync(StateHasChanged);
    }

    public void EnableThirdSeriesViaLgend()
    {
        _series[2].IsEnabled = true;
        InvokeAsync(StateHasChanged);
    }

    public void RemoveThirdSeries()
    {
        ShowThirdSeries = false;
        OnParametersSet();
        InvokeAsync(StateHasChanged);
    }

    public void RemoveThirdSeriesByLegend()
    {
        _series[2].IsEnabled = false;
        InvokeAsync(StateHasChanged);
    }

 }
