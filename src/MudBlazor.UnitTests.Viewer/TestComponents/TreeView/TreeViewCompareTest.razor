@using System.Collections
@namespace MudBlazor.UnitTests.TestComponents

<MudTreeView T="string" SelectionMode="SelectionMode.ToggleSelection" @bind-SelectedValue="SelectedValue" Comparer="Comparer">
    <MudTreeViewItem Value='"Ax"' @bind-Activated="_item1Activated" @bind-Selected="_parentItemSelected">
        <MudTreeViewItem Value='"Bx"' />
    </MudTreeViewItem>
    <MudTreeViewItem Value='"Cx"' @bind-Activated="_item2Activated">
        <MudTreeViewItem Value='"Dx"' />
    </MudTreeViewItem>
</MudTreeView>

<p class="selected-value">
    @SelectedValue
</p>
<p class="parent-selected">
    @_parentItemSelected
</p>
<p class="item1-activated">
    @_item1Activated
</p>
<p class="item2-activated">
    @_item2Activated
</p>
@code{
    [Parameter]
    public string SelectedValue { get; set; }

    private bool _parentItemSelected;

    private bool _item1Activated;

    private bool _item2Activated;

    [Parameter]
    public IEqualityComparer<string> Comparer { get; set; } = new DelegateEqualityComparer<string>(
            (x, y) => 
            {
                if (x == null && y == null) return true;
                if (x == null || y == null) return false;
                return x.Equals(y);
            },
            obj => 
            {
                if (obj == null) return 0;
                return obj.GetHashCode();
            }
        );
}