on:
  issues:
    types: [opened]

jobs:
  apply-label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const body = context.payload.issue.body;
            let labels = [];
            if (body.includes("- [X] I would like to do a Pull Request")) {
              labels.push("wants to do a PR");
              const author = context.payload.issue.user.login;              
              const comment = 'ðŸ‘‹ Thanks for wanting to do a PR @' + author + ' !\nWe will try to merge all (non-breaking) bugfix PRs and we will deliberate the value of feature PRs for the community. But be warned that there is no guarantee that new features will be merged. If you want to be sure before investing the work please contact the team about your planned feature PR'
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              })
              github.rest.issues.addAssignees({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                assignees: [author]
              })
              console.log("Author wants to do a PR.");
            }
        
            if (body.includes("### Feature request type\n\nNew component")) {
              labels.push("new component");
              console.log("Feature request type: new component.");
              
            } else if (body.includes("### Feature request type\n\nPerformance improvement")) {
              labels.push("performance");
              console.log("Feature request type: Performance improvement.");
              
            } else if (body.includes("### Bug type\n\nDocs (mudblazor.com)")) {
              labels.push("docs");
              console.log("Bug type: docs.");
            }
            
            if(labels.length != 0) {
              github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: labels
              })
            }